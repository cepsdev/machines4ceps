Scenario{
     title{label _oblectamenta_abi_func_call title = "The function call ABI.";};
     Given{
		  let the_stack = obj(stack{});
        the_stack;
     };
     And{
		let the_data = obj(
            data{
                OblectamentaDataLabel result;
                result; 0;
            }
        );
        the_data;
     };
     And{
		let the_code = obj(
            text{
                OblectamentaCodeLabel func_add;
                OblectamentaDataLabel result;
                  ldi32(1);
                  ldi32(2);
                  ldi32(0); //result;                  
                  call(func_add);
                  sti32(result);
                  popi32;
                  popi32;
                  halt;
                 func_add;
                  setframe; //frm-register = stack[]
                  cpysi32(2);
                  cpysi32(1);
                  addi32;          
                  wrsi32(0);
                  ret;
           });
        the_code;
     };
     When{
        let the_vm = run_oblectamenta_bytecode(
            vm{
                the_stack;
                the_data;
                the_code;
            }
        );
        run{
         vm{
          stack;
          data;
          text;
         };
        };
     };
     Then
     {

        vm{ data{}; stack{}; text; };
        verdict{equality_test{ 
            data{3;0;0;0;1;0;0;0;2;0;0;0;0;0;0;0;};
            the_vm.vm.data;
        };};
     };
};