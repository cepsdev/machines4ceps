/*
 * 
 * @author Tomas Prerovsky <tomas.prerovsky@gmail.com> 
 * 
 * 
 * 
 * @section DESCRIPTION
 * 
 * Part of SM4cepS (State Machines for ceps).
 *
 *
 * Demonstrates usage and semantics of in_state().
 * 
 * SYNOPSIS:
 * 
 * in_state(state-id_1,state-id_2,...,state-id_n)
 * 
 * Returns true (i.e. an integer unequal 0) if for some 1 <= j <= n state_j is element of the set of current states - a data 
 * structure maintained by the sm4ceps core runtime. Otherwise returns false (i.e. 0).
 * 
 * state_id can be :
 * - the full-qualified identifier of a state or 
 * - the name of a local state, i.e. a state with the same sm-minimal scope. A lexical scope S is sm-minimal with respect to a given 
 *   lexical entity E if and only if S is the **minimally** chosen scope which satisfies the following conditions:
 *   - S contains E.
 *   - S is identical to a state machine definition.
 
 */


kind Systemstate;
kind Guard;
kind Event;


Guard g1,g2,g3,g4;
Systemstate v1,v2,v3;
Event e,f,g,h,i;

Statemachine{id{A;};
 States{Initial;Final;};
 Actions{
  a{
    expect(in_state(Initial));
  };  
 };
 Transition{Initial;Final;e;a;};
};

Statemachine{id{B;};
  
};


Simulation
{ 
  TestCase{If_the_in_state_function;};Test{gets_called_with_the_name_of_an_active_global_state_machine_the_returned_value_is_true;};
  Start{A;};  
  expect(in_state(A),"Expected A to be an active state.");
  expect(!in_state(B),"Expected B to be an inactive state.");
};

Simulation
{ 
  TestCase{If_the_in_state_function;};Test{gets_called_inside_an_action_you_can_identify_local_states_with_their_names;};
  Start{A;};
  expect(in_state(A),"Expected A to be an active state.");
  expect(!in_state(B),"Expected B to be an inactive state.");
  e; 
};

Simulation
{ 
  TestCase{The_in_state_function;};Test{accepts_any_number_of_state_ids_which_can_be_fullqualified;};
  Start{A;};
  expect(in_state(A),"Expected A to be an active state.");
  expect(!in_state(B),"Expected B to be an inactive state.");
  e; 
  expect(in_state(A.Final,A.Initial), "Expected to be in at least in one of the states: A.Final,A.Initial." );
};






