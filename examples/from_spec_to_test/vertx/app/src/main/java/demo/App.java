/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import io.vertx.core.Vertx;
import io.vertx.core.eventbus.EventBus;
import io.vertx.core.http.HttpClient;
import io.vertx.core.http.HttpMethod;
import io.vertx.core.http.WebSocket;
import io.vertx.core.*;
import io.vertx.core.net.NetSocket;

public class App {

    public class LogVerticle extends AbstractVerticle{
        public void start(Promise<Void> startPromise){

            eb.consumer("state.logger", msg -> {
                if (ws == null) return;
                System.out.println(msg.body().toString());
                ws.writeTextMessage(msg.body().toString(), res -> {
                    if(!res.succeeded()) return;
                });
            });                    

            client = vertx.createHttpClient();
            client.webSocket(3001, "localhost", "", res -> {
                System.out.println("A");
                if (res.succeeded()){
                    startPromise.complete();
                    ws = res.result();
                    ws.frameHandler(frame -> {});
                } else {
                    res.cause().printStackTrace();
                }
            });
        }
        HttpClient client = null;
        WebSocket ws = null;
    }

    LogVerticle logverticle = null;
    static Vertx vertx = Vertx.vertx();
    EventBus eb = vertx.eventBus();
   
    void start(){
        logverticle = new LogVerticle();
        vertx.deployVerticle(logverticle, res -> {
            if (!res.succeeded()) System.exit(1);

            vertx.setTimer(1000, id -> {
                eb.send("state.logger","EVENT DoneA");
            });
            vertx.setTimer(3000, id -> {
                eb.send("state.logger","EVENT DoneB");
            });
            vertx.setTimer(5000, id -> {
                eb.send("state.logger","EVENT DoneC");
            });
        });
    }

    public static void main(String[] args) {

        new App().start();


    }
}
