/*
 * 
 * @author Tomas Prerovsky <tomas.prerovsky@gmail.com> 
 * 
 * 
 * 
 * @section DESCRIPTION
 * 
 * Part of SM4cepS (State Machines for ceps).
 *
 *
 * Demonstrates usage and semantics of timer triggered events.
 *
 * 
 */

kind Event;

Event E,F,G,H;



Statemachine
{
 id{S1;};
 States{Initial;Final;a;b;c;d;e;};
 Actions{a1{start_timer(2.001*s,E);start_timer(5.001*s,F);start_timer(6.001*s,G);};};
 Transition{Initial;a;a1;};
 Transition{a;b;E;};
 Transition{b;c;F;};
 Transition{c;d;G;};
};

Statemachine
{
 id{S2;};
 States{Initial;Final;a;b;c;d;e;};
 Actions{
   a1{start_timer(2.001*s,E);start_timer(5.001*s,F);start_timer(6.001*s,G,third_timer);};
   a2{F;stop_timer(third_timer);};
 };
 Transition{Initial;a;a1;};
 Transition{a;b;E;a2;};
 Transition{b;c;F;};
 Transition{c;d;G;};
};

Statemachine
{
 id{S3;};
 States{Initial;Final;a;b;c;d;e;};
 Actions{
   a1{start_timer(2.001*s,E);start_timer(5.001*s,F);start_timer(6.001*s,G,third_timer);};
   a2{F;stop_timer()/*stop all timer*/;};
 };
 Transition{Initial;a;a1;};
 Transition{a;b;E;a2;};
 Transition{b;c;F;};
 Transition{c;d;G;};
};

val FLAG = -1.0;

Statemachine
{
 id{S4;};
 States{Initial;Final;a;b;c;d;e;};
 Actions{
   a1{start_timer(FLAG*2.001*s,E);start_timer(FLAG*5.001*s,F);start_timer(FLAG*6.001*s,G,third_timer);};
   a2{F;};
 };
 Transition{Initial;a;a1;};
 Transition{a;b;E;a2;};
 Transition{b;c;F;};
 Transition{c;d;G;};
};

/**
 * @section DESCRIPTION
 * 
 * Demonstrates usage of timers. 
 *
 * */
Simulation
{
 Start{S1;};
 ASSERT_EVENTUALLY_VISIT_STATES{S1.a;};
 ASSERT_EVENTUALLY_VISIT_STATES{S1.b;};
 ASSERT_EVENTUALLY_VISIT_STATES{S1.c;};
 ASSERT_EVENTUALLY_VISIT_STATES{S1.d;};
};

/**
 * @section DESCRIPTION
 * 
 * Demonstrates usage of timers. 
 *
 * */
Simulation
{
 Start{S2;};
 ASSERT_EVENTUALLY_VISIT_STATES{S2.a;};
 ASSERT_EVENTUALLY_VISIT_STATES{S2.b;};
 ASSERT_NEVER_VISIT_STATES{S2.d;};
};

/**
 * @section DESCRIPTION
 * 
 * Demonstrates usage of timers. 
 *
 * */
Simulation
{
 Start{S3;};
 ASSERT_EVENTUALLY_VISIT_STATES{S3.a;};
 ASSERT_EVENTUALLY_VISIT_STATES{S3.b;};
 ASSERT_EVENTUALLY_VISIT_STATES{S3.c;};
 ASSERT_NEVER_VISIT_STATES{S3.d;};
};


/**
 * @section DESCRIPTION
 * 
 * Demonstrates behaviour of timers in the case of negative time durations.
 *
 * */
Simulation
{
 Start{S4;};
 ASSERT_NEVER_VISIT_STATES{S4.d;S4.b;};
};



