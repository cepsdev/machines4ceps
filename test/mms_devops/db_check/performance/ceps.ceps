kind Event;
kind Parameter;
Event dummy;

Parameter hostname;
Parameter passwd;
Parameter user;
Parameter timestamp;
Parameter database;
Parameter job_name;
Parameter sap_code;
Parameter time_delta;
Parameter check_for_empty_resultset_only;
Parameter on_error;
Parameter on_success;

Event failed;
Event ok;
Event error;

sm {
 S;
 states{Initial;A;B;C;};
 on_enter{print("S started.\n");};
 Actions{
  enter_b{
   // print("enter_b\n");
  };
 };
 t{Initial;B;failed;};
 t{Initial;C;error;enter_b;};
 t{Initial;A;ok;};
};

Event log_error;

sm{
 Log;
 states{Initial;};
 on_enter{print("Log started.\n");};
 Actions{
  do_log_error{print("[",timestamp(),"]","[ERROR][",argv(1),"] ",argv(2),"\n");};
 };
 t{Initial;Initial;log_error;do_log_error;};
};

Simulation{
 Start{S;Log;};
 static_for(e: 1 .. 500){
    mms_rollaut_db_check(hostname   = env("ROLLAUT_DB_HOST"), 
                      user       = env("ROLLAUT_DB_USER"),
                      passwd     = env("ROLLAUT_DB_PASSWD"),
                      database   = env("ROLLAUT_DB_DB"),
                      sap_code   = text(e),
                      job_name   = "abc",
                      timestamp  = timestamp(),
                      on_error   = failed,
                      on_success = ok           
                     );
 }



};
