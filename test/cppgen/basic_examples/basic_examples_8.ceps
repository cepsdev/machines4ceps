kind Event;
kind Systemstate;
kind Guard;

Event ev1,ev2,ev3,ev4,ev5;

Statemachine{
 id{Flap_to_open;};
 States{Initial;Final;Error;};
 

};

Statemachine{
 id{Antenna_lashing_unlock;};
 States{Initial;Final;Error;};
 

};

Statemachine
{
  id{Platform_extend_fto_and_alu;};
  States{Initial;Final;};
  join{Final;};

  
  thread{
    States{Initial;Final;};
    import{Flap_to_open;};
    Transition{Initial;Flap_to_open;};
    Transition{Flap_to_open.Final;Final;};
  };
  
  thread{
    States{Initial;Final;};
    Actions {a_antenna_lashing_unlock_starting {;};};
    import{Antenna_lashing_unlock;};
    Transition{Initial;Antenna_lashing_unlock; a_antenna_lashing_unlock_starting;};
    Transition{Antenna_lashing_unlock.Final;Final;};
  };
};

Statemachine
{
  id{Platform_extend;};
  import{Platform_extend_fto_and_alu;}; 
  States{Initial;Final;Error;Z_drive_to_indexposition;};
  join{Final;};

   Actions{
    a_antenna_to_raise_is_starting              {ev1;};
    a_z_drive_to_indexposition_is_starting      {ev2;};
    a_platform_extend_is_starting 		{
      ev3;
    };
    a_platform_extend_is_finished 		{
      ev4;
    };
    a_platform_extend_preconditions_are_not_met {ev5;};
  };
  
  Transition{Initial; Platform_extend_fto_and_alu;  a_platform_extend_is_starting;};
  Transition{Platform_extend_fto_and_alu.Final; Z_drive_to_indexposition;           a_z_drive_to_indexposition_is_starting;};
};

Statemachine
{
  id{System_extend;};
  States{Initial;Final;};
  join{Final;};
  
  thread{
    States{Initial;Final;Stilts_to_extend;};
    Transition{Initial;Stilts_to_extend;      0;};
    Transition{Initial;Final;    1;};
  };
  
  thread{
    States{Initial;Final;};
    import{Platform_extend;};
    Transition{Initial;Platform_extend;};
    Transition{Platform_extend.Final;Final;};
  };
};


Statemachine
{
  id{Dispatch;};
  import {System_extend;};    
  States{Initial;Idle;};

  Actions{
    a_kampfschalter_history{ 
    };
  };
  
  Transition{Initial;Idle;};
  Transition{Idle;System_extend;};
};


Statemachine
{
  id{Ctrl;};

  import {Dispatch;};  
  
  States{Initial;Idle;};
  
  Transition{Initial;Idle;};
  Transition{Idle;Dispatch;};
};

Simulation{
 Start{Ctrl;};
};


