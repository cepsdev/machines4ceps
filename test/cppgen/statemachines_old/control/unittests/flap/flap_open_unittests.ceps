// <description>

Globals
{
  // Redefinition for test acceleration
  TIMER_ACTIVATION = 0.01;
};

Flap_open_unittests
{
//  g_flap_is_open                  = 0;
  SENSOR_HZO  = 0;  //  HaubeRiegelOffen
  SENSOR_HZG  = 0;  //  HaubeRiegelGeschlossen
//  g_flap_is_unlocked              = 1;
  SENSOR_HR1O = 1;  //  HaubeRiegel1_Offen
  SENSOR_HR1V = 0;  //  HaubeRiegel1_Verriegelt
  SENSOR_HR2O = 1;  //  HaubeRiegel2_Offen
  SENSOR_HR2V = 0;  //  HaubeRiegel2_Verriegelt
//  g_system_pressure_is_sufficient = 1;
  Pneumatics.system_pressure      = DEFAULT_SYSTEM_PRESSURE;
  SENSOR_KAMPFSCHALTER_A            = 0;
  g_mast_is_not_blocking_flap     = 1;
};

Simulation
{
  TestCase{Flap_open_unittests;};Test{Initialization;};

  Start { sm_Flap_open; };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_open.Flap_Opening;};
};

Simulation
{
  TestCase{Flap_open_unittests;};Test{Initialization_given_objective_is_already_reached;};

//  g_flap_is_open     = 1;
  SENSOR_HZO  = 1;  //  HaubeRiegelOffen

  Start { sm_Flap_open;};

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_open.Final;};
};


Simulation
{
  TestCase{Flap_open_unittests;};Test{Initialization_given_flap_is_locked;};

//  g_flap_is_unlocked = 0;
  SENSOR_HR1O = 0;  //  HaubeRiegel1_Offen
  SENSOR_HR2O = 0;  //  HaubeRiegel2_Offen

  Start { sm_Flap_open; };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_open.Error;};
};


Simulation
{
  TestCase{Flap_open_unittests;};Test{Initialization_given_air_pressure_not_sufficient_and_kampfschalter_not_active;};

//  g_system_pressure_is_sufficient = 0;
  Pneumatics.system_pressure      = 0.0;

  Start { sm_Flap_open;};

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_open.Error;};
};


Simulation
{
  TestCase{Flap_open_unittests;};Test{Initialization_given_air_pressure_not_sufficient_but_kampfschalter_active;};

//  g_system_pressure_is_sufficient = 0;
  Pneumatics.system_pressure      = 0.0;
  SENSOR_KAMPFSCHALTER_A            = 1;

  Start { sm_Flap_open; };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_open.Flap_Opening;};
};


Simulation
{
  TestCase{Flap_open_unittests;};Test{Initialization_given_mast_blocks_flap;};

  g_mast_is_not_blocking_flap = 0;

  Start { sm_Flap_open; };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_open.Error;};
};


Simulation
{
  TestCase{Flap_open_unittests;};Test{From_start_to_finish;};

  Start { sm_Flap_open; };

  ev_flap_is_open;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_open.Final;};
};
