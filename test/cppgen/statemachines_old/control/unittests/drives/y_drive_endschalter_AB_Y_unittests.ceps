// <description>
Event ev_total_nonsence;  //  arki: only needet to force transitions in statemachines

Y_drive_endschalter_AB_Y
{
  y_drive.IstPos = 0;
};

Simulation
{
  TestCase{Y_drive_endschalter_AB_Y;};Test{Initialization;};

  Start { sm_Y_drive_endschalter_AB_Y;};

  ASSERT_CURRENT_STATES_CONTAINS{sm_Y_drive_endschalter_AB_Y.Off;};
};


Simulation
{
  TestCase{Y_drive_endschalter_AB_Y;};Test{Visit_all_states;};

  Start { sm_Y_drive_endschalter_AB_Y;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Y_drive_endschalter_AB_Y.Off;};

  y_drive.IstPos = y_drive.ARBEITSPOSITION;
  ev_total_nonsence;  //  arki: workaround to just force a tansition in the statemachine
  ASSERT_CURRENT_STATES_CONTAINS{sm_Y_drive_endschalter_AB_Y.On;};

  y_drive.IstPos = y_drive.ARBEITSPOSITION + y_drive.ARBEITSBEREICH_MIN;
  ev_total_nonsence;  //  arki: workaround to just force a tansition in the statemachine
  ASSERT_CURRENT_STATES_CONTAINS{sm_Y_drive_endschalter_AB_Y.On;};

  y_drive.IstPos = y_drive.ARBEITSPOSITION + y_drive.ARBEITSBEREICH_MAX;
  ev_total_nonsence;  //  arki: workaround to just force a tansition in the statemachine
  ASSERT_CURRENT_STATES_CONTAINS{sm_Y_drive_endschalter_AB_Y.On;};

  y_drive.IstPos = y_drive.ARBEITSPOSITION + y_drive.ARBEITSBEREICH_MAX + 10;
  ev_total_nonsence;  //  arki: workaround to just force a tansition in the statemachine
  ASSERT_CURRENT_STATES_CONTAINS{sm_Y_drive_endschalter_AB_Y.Off;};
};
