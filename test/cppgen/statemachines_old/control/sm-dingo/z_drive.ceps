// Z_drive
Event ev_z_drive_stop, ev_z_drive_move, ev_z_drive_position_changed, ev_z_drive_is_enabled;
Event ev_z_drive_move_up, ev_z_drive_move_down, ev_z_drive_enable, ev_z_drive_disable, ev_z_drive_is_disabled;

global_functions 
{
  a_set_z_drive_state_to_idle
  {
    ev_z_drive_stop;
  };
  a_z_drive_position_changed  { ev_z_drive_position_changed;  };

  z_drive_position_change
  {
    print ( "---------------- Z_drive ---------------- IstPos: ", z_drive.IstPos, " - SollPos: ", z_drive.SollPos, "\n" );
    if ( z_drive.IstPos < z_drive.SollPos )
    {
      z_drive.IstPos = z_drive.IstPos + 1;
      a_z_drive_position_changed;
    } else
    if ( z_drive.IstPos > z_drive.SollPos )
    {
      z_drive.IstPos = z_drive.IstPos - 1;
      a_z_drive_position_changed;
    } else
    {
      a_set_z_drive_state_to_idle;
      print ( "---------------- Z_drive ---------------- event:      ", argv(0), "\n" );
    };
  };
};

Statemachine
{
  id  { sm_Z_drive; };
  description { "Z_drive"; };
  States  { Initial;  Idle; Disabled; Moving; };

  Actions
  {
    a_z_drive_start_moving
    {
//      stop_timer ( timer_z_drive_moving );
      if ( z_drive.SollGeschw >= 0.1 )
      {
        print ( "-------- Z_drive starts moving with SollGeschw: ", z_drive.SollGeschw, " and SollPos: ", z_drive.SollPos, "\n" );
        start_periodic_timer ( ( 1.0 / z_drive.SollGeschw ) * s, z_drive_position_change, timer_z_drive_moving );
      } else
      {
        print ( "-------- Z_drive SollGeschw == 0 ... do nothing" );
      };
    };
    a_z_drive_stop_moving
    {
      print ( "-------- Z_drive stops moving --------\n" );
      stop_timer ( timer_z_drive_moving );
    };
    a_z_drive_is_enabled
    {
      print ( "-------- Z_drive is enabled  --------\n" );
      ev_z_drive_is_enabled;
    };
    a_z_drive_is_disabled
    {
      print ( "-------- Z_drive is disabled  --------\n" );
      ev_z_drive_is_disabled;
    };
  };

  on_enter
  {
    //print("-------- Z_drive.on_enter(), SollGeschw: -------- ", z_drive.SollGeschw, "\n");
  };

  Transition  { Initial;  Disabled;                                             g_z_drive_is_operational; };
  Transition  { Disabled; Idle;     ev_z_drive_enable;  a_z_drive_is_enabled;  !g_z_drive_has_antrieb_fault;  };
  Transition  { Idle;     Moving;   ev_z_drive_move;    a_z_drive_start_moving; };
  Transition  { Moving;   Idle;     ev_z_drive_stop;    a_z_drive_stop_moving; };
  Transition  { Idle;     Disabled; ev_z_drive_disable; a_z_drive_is_disabled; };
};
