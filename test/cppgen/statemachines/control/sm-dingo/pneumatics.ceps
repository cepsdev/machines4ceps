Event ev_set_system_pressure_low, ev_set_system_pressure_normal;
Event ev_stilt_left_state_change;
Event ev_stilt_right_state_change;


Guard g_stilt_moveing_down_ground_contact_left, g_stilt_moveing_down_ground_contact_right;

Globals
{
  g_stilt_moveing_down_ground_contact_left  = ( Stilt_position_left   >= STILTS_POSITION_GROUND_LEFT )  && g_stilts_valve_is_in_extending_position;
  g_stilt_moveing_down_ground_contact_right = ( Stilt_position_right  >= STILTS_POSITION_GROUND_RIGHT ) && g_stilts_valve_is_in_extending_position;
};

// ----------------------------------------------------------------------

Statemachine
{
  id  { sm_Pneumatic_pressure_stilt_left; };
  description { "Pneumatic_pressure_stilt_left";  };
  States  { Initial;  Normal; Prepare_Moving; Moving; Ground_Contact; };
  Actions
  {
    a_moving
    { //  helps to simulate a change of System_pressure
      set_stilt_left_pressure ( System_pressure * STILT_PRESSURE_MOVING_COEFFICIENT );
    };
    set_stilt_left_pressure
    {
      params{ inPressure; };
      Pneumatics.stilt_left_pressure = inPressure; 
      Stilt_left_pressure = inPressure;
      print ( "--- dingo-sim --- set Stilt_left_pressure: ", Stilt_left_pressure, "\n" );
    };
    a_ground_contact          { set_stilt_left_pressure ( STILT_PRESSURE_ON_GROUND ); ev_stilt_left_state_change;  };
    a_normal                  { set_stilt_left_pressure ( START_SYSTEM_PRESSURE ); };
    a_start_moving            { set_stilt_left_pressure ( System_pressure * STILT_PRESSURE_MOVING_COEFFICIENT ); };
    a_start_retract           { set_stilt_left_pressure ( System_pressure * STILT_PRESSURE_MOVING_COEFFICIENT ); };  //  physicly not correct but good for sim
    a_prepare_moving          { set_stilt_left_pressure ( System_pressure ); };
  };

  Transition  { Initial;                 Normal;  a_normal; };
  Transition  { Normal;          Prepare_Moving;  a_prepare_moving; g_stilts_valve_is_in_prepare_position;  };
  Transition  { Prepare_Moving;          Moving;  a_start_moving;   g_stilts_valve_SVK_is_in_unlocking_position && g_stilts_valve_is_in_extending_position;  };
//  Transition  { Moving;                  Moving;  a_moving; };
  Transition  { Moving;          Ground_Contact;  a_ground_contact; g_stilt_moveing_down_ground_contact_left; };
  Transition  { Ground_Contact;  Prepare_Moving;  a_prepare_moving; g_stilts_valve_is_in_prepare_position; };
  Transition  { Prepare_Moving;          Moving;  a_start_retract;  g_stilts_valve_SVK_is_in_unlocking_position && g_stilts_valve_is_in_retracting_position; };
  Transition  { Moving;                  Normal;  a_normal;         g_stilts_valves_are_in_closed_position; };
};

// ----------------------------------------------------------------------

Statemachine
{
  id  { sm_Pneumatic_pressure_stilt_right; };
  description { "Pneumatic_pressure_stilt_right";  };
  States  { Initial;  Normal; Prepare_Moving; Moving; Ground_Contact; };
  Actions
  {
    a_moving
    { //  helps to simulate a change of System_pressure
      set_stilt_right_pressure ( System_pressure * STILT_PRESSURE_MOVING_COEFFICIENT );
    };
    set_stilt_right_pressure
    {
      params{ inPressure ;};
      Pneumatics.stilt_right_pressure = inPressure; 
      Stilt_right_pressure = inPressure;
      print ( "--- dingo-sim --- set Stilt_right_pressure: ", Stilt_right_pressure, "\n" );
    };
    a_ground_contact          { set_stilt_right_pressure ( STILT_PRESSURE_ON_GROUND ); ev_stilt_right_state_change;  };
    a_normal                  { set_stilt_right_pressure ( START_SYSTEM_PRESSURE ); };
    a_start_moving            { set_stilt_right_pressure ( System_pressure * STILT_PRESSURE_MOVING_COEFFICIENT ); };
    a_start_retract           { set_stilt_right_pressure ( System_pressure * STILT_PRESSURE_MOVING_COEFFICIENT ); };  //  physicly not correct but good for sim
    a_prepare_moving          { set_stilt_right_pressure ( System_pressure ); };
  };

  Transition  { Initial;                 Normal;  a_normal; };
  Transition  { Normal;          Prepare_Moving;  a_prepare_moving; g_stilts_valve_is_in_prepare_position;  };
  Transition  { Prepare_Moving;          Moving;  a_start_moving;   g_stilts_valve_SVK_is_in_unlocking_position && g_stilts_valve_is_in_extending_position;  };
//  Transition  { Moving;                  Moving;  a_moving; };
  Transition  { Moving;          Ground_Contact;  a_ground_contact; g_stilt_moveing_down_ground_contact_right; };
  Transition  { Ground_Contact;  Prepare_Moving;  a_prepare_moving; g_stilts_valve_is_in_prepare_position; };
  Transition  { Prepare_Moving;          Moving;  a_start_retract;  g_stilts_valve_SVK_is_in_unlocking_position && g_stilts_valve_is_in_retracting_position; };
  Transition  { Moving;                  Normal;  a_normal;         g_stilts_valves_are_in_closed_position; };
};

// ----------------------------------------------------------------------

Statemachine
{
  id  { sm_Pneumatic_pressure_system;  };
  description { "Pneumatic_pressure_system";  };
  States  { Initial;  Normal; Low;  };
  Actions
  {
    a_low
    {
      System_pressure = LOW_SYSTEM_PRESSURE;
      Pneumatics.system_pressure  = System_pressure;
      print ( "--- dingo-sim --- set System_pressure: ", System_pressure, " (low)\n" );
    };
    a_normal
    {
      System_pressure = DEFAULT_SYSTEM_PRESSURE;
      Pneumatics.system_pressure  = System_pressure;
      print ( "--- dingo-sim --- set System_pressure: ", System_pressure, " (default)\n" );
    };
  };
  Transition  { Initial;  Low;  };
  Transition  { Normal;   Low;    ev_set_system_pressure_low;     a_low;  };
  Transition  { Low;      Normal; ev_set_system_pressure_normal;  a_normal; };
};
