Event ev_y_drive_to_target_position_not_needed,   ev_y_drive_to_target_position_starts,   ev_y_drive_to_target_position_moving,   ev_y_drive_is_in_target_position;
Event ev_y_drive_to_target_position_interrupted,  ev_y_drive_to_target_position_timeout,  ev_y_drive_to_target_position_finished;
Event ev_y_drive_move_init;

global_functions
{
  y_drive_set_target_position
  {
    params{ inTargetPos; };
    print ( "-------- y_drive_set_target_position -------- inTargetPos: ", inTargetPos, "\n" );

    if ( inTargetPos > y_drive.MAX_POS )
    {
      y_drive.TargetPosition = y_drive.MAX_POS;
    } else
    if ( inTargetPos < y_drive.MIN_POS )
    {
      y_drive.TargetPosition = y_drive.MIN_POS;
    } else
    {
      y_drive.TargetPosition = inTargetPos;
    };
    print ( "-------------------------------- y_drive.TargetPosition: ", y_drive.TargetPosition, ", SollGeschw: ", y_drive.SollGeschw, "\n" );
  };
};

Statemachine
{
  id  { sm_Y_drive_to_target_position;  };
  description { "Y_drive_to_target_position";  };
  States  { Initial;  Final;  Start;  Error;  };
  import  { sm_Y_drive_move;  };
  Actions
  {
    a_y_drive_to_target_position_not_needed   { ev_y_drive_to_target_position_not_needed; };
    a_y_drive_to_target_position_start        { ev_y_drive_to_target_position_starts;
                                                ev_y_drive_move_init ( MODE_TO_TARGET, y_drive.TargetPosition );
                                                start_timer ( DEF_TIME_Y_FAHREN * s, ev_y_drive_to_target_position_timeout,  timer_y_drive_to_target_position_timeout );
                                              };
    a_y_drive_to_target_position_moving       { ev_y_drive_to_target_position_moving;       };
    a_y_drive_is_in_target_position           { ev_y_drive_is_in_target_position;           };
    a_y_drive_to_target_position_timeout      { ev_y_drive_to_target_position_interrupted;  };
    a_y_drive_to_target_position_interrupted  { ev_y_drive_to_target_position_interrupted;  };
  };

  on_enter
  {
    if ( argc() < 1 )
    {
      print ( "---------------------------------------- Too few arguments for start of 'Y_drive_to_target_position' \n" );
    } else
    {
      y_drive_set_target_position ( argv ( 1 ) );
    };
  };
  on_exit
  {
    stop_timer ( timer_y_drive_to_target_position_timeout );
    ev_y_drive_to_target_position_finished;
  };

  Transition  { Initial;                Final;                                                    a_y_drive_to_target_position_not_needed;    g_y_drive_is_in_target_position;  };
  Transition  { Initial;                Start;                                                    a_y_drive_to_target_position_start;        !g_y_drive_is_in_target_position;  };
  Transition  { Start;                  sm_Y_drive_move;  ev_y_drive_move_init;                   a_y_drive_to_target_position_moving;      };
  Transition  { sm_Y_drive_move.Final;  Final;                                                    a_y_drive_is_in_target_position;            g_y_drive_is_in_target_position;  };
  Transition  { sm_Y_drive_move.Final;  Error;                                                    a_y_drive_to_target_position_interrupted;  !g_y_drive_is_in_target_position;  };
  Transition  { sm_Y_drive_move;        Error;            ev_y_drive_to_target_position_timeout;  a_y_drive_to_target_position_timeout;     };
  Transition  { sm_Y_drive_move.Error;  Error;                                                    a_y_drive_to_target_position_interrupted; };
};

