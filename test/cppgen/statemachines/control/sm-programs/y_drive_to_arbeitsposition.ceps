Event ev_y_drive_to_arbeitsposition_not_needed,   ev_y_drive_to_arbeitsposition_starts,   ev_y_drive_to_arbeitsposition_moving,   ev_y_drive_is_in_arbeitsposition;
Event ev_y_drive_to_arbeitsposition_interrupted,  ev_y_drive_to_arbeitsposition_timeout,  ev_y_drive_to_arbeitsposition_finished;
Event ev_y_drive_move_init;

Statemachine
{
  id  { sm_Y_drive_to_arbeitsposition; };
  description { "Y_drive_to_arbeitsposition"; };
  States  { Initial;  Final;  Start;  Error;  };
  import  { sm_Y_drive_move;  };
  Actions
  {
    a_y_drive_to_arbeitsposition_not_needed   { ev_y_drive_to_arbeitsposition_not_needed; };
    a_y_drive_move_to_arbeitsposition         { ev_y_drive_to_arbeitsposition_starts;
                                                ev_y_drive_move_init ( MODE_TO_TARGET, y_drive.ARBEITSPOSITION );
                                                start_timer ( DEF_TIME_Y_FAHREN * s, ev_y_drive_to_arbeitsposition_timeout,  timer_y_drive_to_arbeitsposition_timeout );
                                              };
    a_y_drive_to_arbeitsposition_moving       { ev_y_drive_to_arbeitsposition_moving;       };
    a_y_drive_is_in_arbeitsposition           { ev_y_drive_is_in_arbeitsposition;           };
    a_y_drive_to_arbeitsposition_timeout      { ev_y_drive_to_arbeitsposition_interrupted;  };
    a_y_drive_to_arbeitsposition_interrupted  { ev_y_drive_to_arbeitsposition_interrupted;  };
  };

  //on_enter {};
  on_exit
  {
    stop_timer ( timer_y_drive_to_arbeitsposition_timeout );
    ev_y_drive_to_arbeitsposition_finished;
  };

  Transition  { Initial;                Final;                                                    a_y_drive_to_arbeitsposition_not_needed;    g_y_drive_is_in_arbeitsposition; };
  Transition  { Initial;                Start;                                                    a_y_drive_move_to_arbeitsposition;         !g_y_drive_is_in_arbeitsposition; };
  Transition  { Start;                  sm_Y_drive_move;  ev_y_drive_move_init;                   a_y_drive_to_arbeitsposition_moving;      };
  Transition  { sm_Y_drive_move.Final;  Final;                                                    a_y_drive_is_in_arbeitsposition;            g_y_drive_is_in_arbeitsposition; };
  Transition  { sm_Y_drive_move.Final;  Error;                                                    a_y_drive_to_arbeitsposition_interrupted;  !g_y_drive_is_in_arbeitsposition; };
  Transition  { sm_Y_drive_move;        Error;            ev_y_drive_to_arbeitsposition_timeout;  a_y_drive_to_arbeitsposition_timeout;     };
  Transition  { sm_Y_drive_move.Error;  Error;                                                    a_y_drive_to_arbeitsposition_interrupted; };
};

