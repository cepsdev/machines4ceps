Event ev_y_drive_brake_release,  ev_y_drive_brake_is_released,  ev_y_drive_brake_release_timeout, ev_y_drive_brake_release_was_interrupted, ev_y_drive_brake_release_interrupted;
Event ev_y_drive_can_control, ev_y_drive_can_state_response;
Guard g_y_drive_has_antrieb_fault;

Statemachine
{
  id  { sm_Y_drive_brake_release;  };
  description { "Y_drive_brake_release"; };
  States  { Initial;  Final;  Start;  Error;  Releasing; };

  Actions
  {
    a_y_drive_brake_release_not_needed
    {
      print ( "---------- Y_drive brake_release_not_needed ----------\n" );
      ev_y_drive_brake_is_released;
    };
    a_y_drive_brake_release_start
    {
      print ( "---------- Y_drive brake_release ----------\n" );
      y_drive.Control.ANTRIEB_BRAKE_RELEASE = 1;
      ev_y_drive_can_control;
      ev_y_drive_brake_release;
      start_timer ( DEF_TIME_RUCKMLD_ANTRIEBE * s, ev_y_drive_brake_release_timeout,   timer_y_drive_brake_release );
      //ev_y_drive_brake_release_timeout; //  force timeout only for test
    };
    a_y_drive_brake_is_released
    {
      print ( "---------- Y_drive brake_is_released ----------\n" );
      ev_y_drive_brake_is_released;
    };
    a_y_drive_was_interrupted             { ev_y_drive_brake_release_was_interrupted; };
    a_y_drive_brake_release_interrupted   { ev_y_drive_brake_release_interrupted; };
  };

  on_exit
  {
    stop_timer ( timer_y_drive_brake_release );
    if ( !in_state ( Final ) )
    {
      a_y_drive_was_interrupted;
    };
  };

  Transition  { Initial;      Final;                                        g_y_drive_brake_is_released;  a_y_drive_brake_release_not_needed;   };
  Transition  { Initial;      Start;                                       !g_y_drive_brake_is_released;                                        };
  Transition  { Start;        Releasing;                                   !g_y_drive_has_antrieb_fault;  a_y_drive_brake_release_start;        };
  Transition  { Releasing;    Final;      ev_y_drive_can_state_response;    g_y_drive_brake_is_released;  a_y_drive_brake_is_released;          };
  Transition  { Releasing;    Error;      ev_y_drive_brake_release_timeout;                               a_y_drive_brake_release_interrupted;  };
};

