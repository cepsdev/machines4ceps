Event ev_y_drive_to_indexposition_timeout, ev_y_drive_move_go, ev_y_drive_is_in_indexposition, ev_y_drive_enable_timeout, ev_y_drive_moving_timeout, ev_y_drive_movement_stopped, ev_y_drive_move_starts, ev_y_drive_move_to_indexposition_starts;

Statemachine
{
  id  { sm_Y_drive_to_indexposition;  };
  description { "Y_drive_to_indexposition";  };
  States  { Initial;  Start;  Final;  Error;  };
  import  { sm_Y_drive_move;  };
  Actions
  {
    a_y_drive_start                     { ev_y_drive_move_to_indexposition_starts;  };
    a_y_drive_move_start                { ev_y_drive_move_starts; };
    a_y_drive_move_to_indexposition     { ev_y_drive_move_go ( MODE_TO_TARGET, y_drive.INDEXPOSITION, WITH_ENABLE_TIMEOUT, WITH_MOVING_TIMEOUT );  };
    a_y_drive_is_in_indexposition       { ev_y_drive_is_in_indexposition; ivenet_mast_state.value_out = IVENET_MAST_IS_LOCKED_NAVIGATION_MODE;  };
    a_y_drive_to_indexposition_timeout  { ev_y_drive_to_indexposition_timeout;  };
  };

  //on_enter {};
  //on_exit{};

  Transition  { Initial;          Start;                                          a_y_drive_move_to_indexposition; a_y_drive_start;  !g_y_drive_is_in_indexposition;  };
  Transition  { Start;            sm_Y_drive_move;  ev_y_drive_move_go; };
  Transition  { sm_Y_drive_move;  Error;            ev_y_drive_enable_timeout;    a_y_drive_to_indexposition_timeout; };
  Transition  { sm_Y_drive_move;  Error;            ev_y_drive_moving_timeout;    a_y_drive_to_indexposition_timeout; };
  Transition  { sm_Y_drive_move;  Final;            ev_y_drive_movement_stopped;  a_y_drive_is_in_indexposition;      };
  Transition  { Initial;          Final;                                          a_y_drive_is_in_indexposition;                      g_y_drive_is_in_indexposition;  };
};

