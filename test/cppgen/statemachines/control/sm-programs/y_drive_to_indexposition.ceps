Event ev_y_drive_to_indexposition_not_needed,   ev_y_drive_to_indexposition_starts,   ev_y_drive_to_indexposition_moving,   ev_y_drive_is_in_indexposition;
Event ev_y_drive_to_indexposition_interrupted,  ev_y_drive_to_indexposition_timeout,  ev_y_drive_to_indexposition_finished;
Event ev_y_drive_move_init;

Statemachine
{
  id  { sm_Y_drive_to_indexposition;  };
  description { "Y_drive_to_indexposition"; };
  States  { Initial;  Final;  Start;  Error;  };
  import  { sm_Y_drive_move;  };
  Actions
  {
    a_y_drive_to_indexposition_not_needed     { ev_y_drive_to_indexposition_not_needed; };
    a_y_drive_to_indexposition_start          { ev_y_drive_to_indexposition_starts;
                                                ev_y_drive_move_init ( MODE_TO_TARGET, y_drive.INDEXPOSITION );
                                                start_timer ( DEF_TIME_Y_FAHREN * s, ev_y_drive_to_indexposition_timeout,  timer_y_drive_to_indexposition_timeout );
                                              };
    a_y_drive_to_indexposition_moving         { ev_y_drive_to_indexposition_moving;       };
    a_y_drive_is_in_indexposition             { ev_y_drive_is_in_indexposition;           };
    a_y_drive_to_indexposition_timeout        { ev_y_drive_to_indexposition_interrupted;  };
    a_y_drive_to_indexposition_interrupted    { ev_y_drive_to_indexposition_interrupted;  };
  };

  on_enter
  {
//    print ( "--- guard --- SENSOR_IP_Y:             ", SENSOR_IP_Y, "\n"
//          , "              y_drive.IstPos:          ", y_drive.IstPos, "\n"
//          );
  };
  on_exit
  {
    stop_timer ( timer_y_drive_to_indexposition_timeout );
    ev_y_drive_to_indexposition_finished;
  };

  Transition  { Initial;                Final;                                                  a_y_drive_to_indexposition_not_needed;    g_y_drive_is_in_indexposition;  };
  Transition  { Initial;                Start;                                                  a_y_drive_to_indexposition_start;        !g_y_drive_is_in_indexposition;  };
  Transition  { Start;                  sm_Y_drive_move;  ev_y_drive_move_init;                 a_y_drive_to_indexposition_moving;      };
  Transition  { sm_Y_drive_move.Final;  Final;                                                  a_y_drive_is_in_indexposition;            g_y_drive_is_in_indexposition;  };
  Transition  { sm_Y_drive_move.Final;  Error;                                                  a_y_drive_to_indexposition_interrupted;  !g_y_drive_is_in_indexposition;  };
  Transition  { sm_Y_drive_move;        Error;            ev_y_drive_to_indexposition_timeout;  a_y_drive_to_indexposition_timeout;     };
  Transition  { sm_Y_drive_move.Error;  Error;                                                  a_y_drive_to_indexposition_interrupted; };
};

