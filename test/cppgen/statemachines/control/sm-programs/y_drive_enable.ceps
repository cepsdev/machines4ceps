Event ev_y_drive_enable_starting,   ev_y_drive_enable,  ev_y_drive_is_enabled;
Event ev_y_drive_enable_timeout,    ev_y_drive_enable_was_interrupted,  ev_y_drive_enable_interrupted;
Event ev_y_drive_can_control, ev_y_drive_can_state_response;
Guard g_y_drive_has_antrieb_fault;

Statemachine
{
  id  { sm_Y_drive_enable;  };
  description { "Y_drive_enable";   };
  States  { Initial;  Final;  Start;  Error;  Enabling;   };

  Actions
  {
    a_y_drive_enable_not_needed   { ev_y_drive_is_enabled;  };
    a_y_drive_enable_starting     { ev_y_drive_enable_starting;   };
    a_y_drive_enable
    {
      print ( "---------- Y_drive enable ----------\n" );
      y_drive.Control.ANTRIEB_ENABLE_IN     = 1;
      ev_y_drive_can_control;
      ev_y_drive_enable;
      a_y_drive_set_timeout_timer;
      //ev_y_drive_enable_timeout;  //  force timeout only for test
    };
    a_y_drive_is_enabled
    {
      a_y_drive_stop_timeout_timer;
      print ( "---------- Y_drive is_enabled ----------\n" );
      ev_y_drive_is_enabled;
    };
    a_y_drive_set_timeout_timer   { start_timer ( DEF_TIME_RUCKMLD_ANTRIEBE * s, ev_y_drive_enable_timeout,   timer_y_drive_enable ); };
    a_y_drive_was_interrupted     { a_y_drive_stop_timeout_timer;   ev_y_drive_enable_was_interrupted; };
    a_y_drive_enable_timeout      { ev_y_drive_enable_interrupted;  };
    a_y_drive_stop_timeout_timer  { stop_timer ( timer_y_drive_enable ); };
  };

  on_exit
  {
    if ( !in_state ( Final ) )
    {
      a_y_drive_was_interrupted;
    };
  };

  Transition  { Initial;      Final;                                        g_y_drive_is_enabled;         a_y_drive_enable_not_needed;  };
  Transition  { Initial;      Start;                                       !g_y_drive_is_enabled;         a_y_drive_enable_starting;    };
  Transition  { Start;        Enabling;                                    !g_y_drive_has_antrieb_fault;  a_y_drive_enable;             };
  Transition  { Enabling;     Final;      ev_y_drive_can_state_response;    g_y_drive_is_enabled;         a_y_drive_is_enabled;         };
  Transition  { Enabling;     Error;      ev_y_drive_enable_timeout;                                      a_y_drive_enable_timeout;     };
};

