Event ev_antenna_is_levelled_out, ev_antenna_to_level_out_started, ev_antenna_to_level_out_is_not_necessary, ev_antenna_to_level_out_reset;
Event ev_antenna_to_level_out_x_drive_is_out_of_range, ev_antenna_alignment_changed, ev_antenna_correction_is_not_possible;
Event ev_level_out_x, ev_level_out_x_started, ev_level_out_x_finished, ev_x_drive_is_in_target_position, ev_x_drive_correction_is_not_possible;
Event ev_level_out_y, ev_level_out_y_started, ev_level_out_y_finished, ev_y_drive_is_in_target_position, ev_y_drive_correction_is_not_possible;
Event ev_talin_data_is_not_valid;

Statemachine
{
  id  { sm_Antenna_to_level_out;};
  description { "Antenna_to_level_out"; };
  States  { Initial;  Final;  Error;  Prepare_X;  Prepare_Y;  Validate_X; Validate_Y; };

  import  { sm_X_drive_to_target_position;  };
  import  { sm_Y_drive_to_target_position;  };

  Actions
  {
    a_antenna_is_levelled_out             { ev_antenna_is_levelled_out; ev_antenna_alignment_changed;};
    a_antenna_to_level_out_started        { ev_antenna_to_level_out_started; };
    a_level_out_x                         { ev_level_out_x ( x_drive.IstPos + Talin_state.axis_x ); };
    a_level_out_y                         { ev_level_out_y ( y_drive.IstPos + Talin_state.axis_y ); };
    a_level_out_x_started                 { ev_level_out_x_started; };
    a_level_out_x_finished                { ev_level_out_x_finished;  };
    a_level_out_y_started                 { ev_level_out_y_started; };
    a_level_out_y_finished                { ev_level_out_y_finished;  };
    a_correction_not_possible             { ev_antenna_correction_is_not_possible;
                                            if ( abs ( x_drive.IstPos + Talin_state.axis_x ) > x_drive.ARBEITSBEREICH_MAX ) ev_x_drive_correction_is_not_possible; 
                                            if ( ( ( y_drive.IstPos + Talin_state.axis_y ) > ( y_drive.ARBEITSPOSITION + y_drive.ARBEITSBEREICH_MAX ) )
                                              || ( ( y_drive.IstPos + Talin_state.axis_y ) < ( y_drive.ARBEITSPOSITION + y_drive.ARBEITSBEREICH_MIN ) )
                                               ) ev_y_drive_correction_is_not_possible;
                                            if ( Talin_state.isValid == 0 ) ev_talin_data_is_not_valid;
                                          };
    a_antenna_to_level_out_reset          { ev_antenna_to_level_out_reset;  };
    a_antenna_to_level_out_not_necessary  { ev_antenna_to_level_out_is_not_necessary; };
    a_x_drive_out_of_range                { ev_antenna_to_level_out_x_drive_is_out_of_range;  };
//    a_talin_data_not_valid                { ev_talin_data_is_not_valid;  };
  };

  on_exit { a_antenna_to_level_out_reset; };

  Transition  { Initial;                        Error;                    a_correction_not_possible;                                         !g_antenna_correction_is_possible;         };
//  Transition  { Initial;                        Error;                    a_talin_data_not_valid;                                            !g_talin_data_is_valid;                    };
  Transition  { Initial;                        Error;                                                            a_x_drive_out_of_range;     g_talin_data_is_valid && !g_x_drive_is_in_range;  };
  Transition  { Initial;                        Final;                    a_antenna_is_levelled_out;  a_antenna_to_level_out_not_necessary;   g_antenna_is_levelled_out;                };
  Transition  { Initial;                        Prepare_X;                                  a_level_out_x;  a_antenna_to_level_out_started;  !g_antenna_is_levelled_out && g_talin_data_is_valid &&  g_x_drive_is_in_range && g_antenna_correction_is_possible;  };
  Transition  { Prepare_X;                      sm_X_drive_to_target_position;  ev_level_out_x;                   a_level_out_x_started;                                                };
  Transition  { sm_X_drive_to_target_position;  Validate_X;                     ev_x_drive_is_in_target_position; a_level_out_x_finished;                                               };
  Transition  { Validate_X;                     Prepare_Y;                                                        a_level_out_y;              g_x_drive_levelling_out_was_successful;  };
  Transition  { Validate_X;                     Error;                                                            a_correction_not_possible; !g_x_drive_levelling_out_was_successful;  };
  Transition  { Prepare_Y;                      sm_Y_drive_to_target_position;  ev_level_out_y;                   a_level_out_y_started;                                                };
  Transition  { sm_Y_drive_to_target_position;  Validate_Y;                     ev_y_drive_is_in_target_position; a_level_out_y_finished;                                               };
  Transition  { Validate_Y;                     Final;                                                            a_antenna_is_levelled_out;  g_y_drive_levelling_out_was_successful;  };
  Transition  { Validate_Y;                     Error;                                                            a_correction_not_possible; !g_y_drive_levelling_out_was_successful;  };
};
