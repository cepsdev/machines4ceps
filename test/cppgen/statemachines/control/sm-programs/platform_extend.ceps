Event ev_platform_extend_is_finished, ev_platform_extend_is_starting;
Event ev_platform_extend_preconditions_are_not_met, ev_platform_extend_interrupted;

Statemachine
{
  id  { sm_Platform_extend; };
  description { "Platform_extend";  };
  States  { Initial;  Final;  Start;  Error;  Z_Drive_not_in_IP;  Z_Drive_in_IP;  };

  import  { sm_Antenna_lashing_unlock;  };
  import  { sm_Platform_extend_fto_and_alu; };      // Flap_to_open and Antenna_lock_unlock
  import  { sm_Z_drive_to_indexposition;  };
  import  { sm_Antenna_to_raise;  };
  import  { sm_Antenna_to_level_out;  };
  import  { sm_Platform_retract_ftc_and_all;  };    // Flap_to_close and Antenna_lock_lock

  Actions
  {
    a_antenna_to_raise_is_starting              { ev_antenna_to_raise;  };
    a_z_drive_to_indexposition_is_starting      { ev_mast_ausfahren;  };
    a_platform_extend_is_starting
    {
      print("---------- ev_platform_extend_is_starting ---------- \n");
      ev_platform_extend_is_starting;
    };
    a_platform_extend_is_finished
    {
      print("---------- ev_platform_extend_is_finished ---------- \n");
      ev_platform_extend_is_finished;
    };
    a_platform_extend_preconditions_are_not_met { ev_platform_extend_preconditions_are_not_met; };
    a_platform_extend_interrupted               { ev_platform_extend_interrupted; };
  };

  Transition  { Initial;                                    Start;                                a_platform_extend_is_starting;                      g_platform_extend_preconditions;  };
  Transition  { Initial;                                    Error;                                a_platform_extend_preconditions_are_not_met;       !g_platform_extend_preconditions;  };
  Transition  { Start;                                      Z_Drive_in_IP;                                                                            g_z_drive_is_in_indexposition;    };
  Transition  { Start;                                      Z_Drive_not_in_IP;                                                                       !g_z_drive_is_in_indexposition;    };
  Transition  { Z_Drive_not_in_IP;                          sm_Platform_extend_fto_and_alu;                                                          !g_flap_is_open;                   };
  Transition  { Z_Drive_not_in_IP;                          sm_Antenna_lashing_unlock;                                                                g_flap_is_open;                   };
  Transition  { sm_Antenna_lashing_unlock.Final;            sm_Z_drive_to_indexposition;          a_z_drive_to_indexposition_is_starting;           };
  Transition  { sm_Antenna_lashing_unlock.Error;            Error;                                a_platform_extend_interrupted;                    };
  Transition  { sm_Platform_extend_fto_and_alu.Final;       sm_Z_drive_to_indexposition;          a_z_drive_to_indexposition_is_starting;           };
  Transition  { sm_Platform_extend_fto_and_alu.Error;       Error;                                a_platform_extend_interrupted;                    };
  Transition  { sm_Z_drive_to_indexposition.Final;          Z_Drive_in_IP;                                                                          };
  Transition  { sm_Z_drive_to_indexposition.Error;          Error;                                a_platform_extend_interrupted;                    };
  Transition  { Z_Drive_in_IP;                              sm_Antenna_to_raise;                  a_antenna_to_raise_is_starting;                   };
  Transition  { sm_Antenna_to_raise.Final;                  sm_Platform_retract_ftc_and_all;                                                        };
  Transition  { sm_Antenna_to_raise.Error;                  Error;                                a_platform_extend_interrupted;                    };
  Transition  { sm_Platform_retract_ftc_and_all.Final;      sm_Antenna_to_level_out;                                                                };
  Transition  { sm_Platform_retract_ftc_and_all.Error;      Error;                                a_platform_extend_interrupted;                    };
  Transition  { sm_Antenna_to_level_out.Final;              Final;                                a_platform_extend_is_finished;                    };
  Transition  { sm_Antenna_to_level_out.Error;              Error;                                a_platform_extend_interrupted;                    };
};
