// to hinge antenna down means: move Y-drive to indexposition (0Â°)
Event ev_antenna_to_hinge_down_starts,  ev_antenna_to_hinge_down_not_needed,  ev_antenna_to_hinge_down_preconditions_are_not_met, ev_antenna_is_hinged_down;
Event ev_antenna_to_hinge_down_timeout, ev_antenna_to_hinge_down_interrupted, ev_antenna_to_hinge_down_was_interrupted;

Statemachine
{
  id  { sm_Antenna_to_hinge_down; };
  description { "Antenna_to_hinge_down"; };
  States  { Initial;  Final;  Start;  Error;  };

  import  { sm_Antenna_to_parking_position; };
  import  { sm_X_drive_to_indexposition;  };
  import  { sm_Y_drive_to_indexposition;  };

  Actions
  {
    a_antenna_to_hinge_down_not_needed    { ev_antenna_to_hinge_down_not_needed; };
    a_preconditions_are_not_met           { ev_antenna_to_hinge_down_preconditions_are_not_met; };
    a_antenna_to_hinge_down_starts        { ev_antenna_to_hinge_down_starts;
                                            start_timer ( DEF_TIME_ANT_ABKLAPPEN * s, ev_antenna_to_hinge_down_timeout,  timer_antenna_to_hinge_down_timeout );
                                          };
    a_antenna_is_hinged_down              { ev_antenna_is_hinged_down;  };
    a_antenna_to_hinge_down_timeout       { ev_antenna_to_hinge_down_interrupted; };
    a_antenna_to_hinge_down_interrupted   { ev_antenna_to_hinge_down_interrupted; };
    a_was_interrupted                     { ev_antenna_to_hinge_down_was_interrupted; };
    a_stop_timout_timer                   { stop_timer ( timer_antenna_to_hinge_down_timeout ); };
  };

  on_exit
  {
    if ( !in_state ( Final, Error ) )
    {
      a_stop_timout_timer;
      a_was_interrupted;
    };
  };

  Transition  { Initial;                              Final;                                                             a_antenna_to_hinge_down_not_needed;  g_antenna_is_hinged_down;  };
  Transition  { Initial;                              Start;                                                                                                 !g_antenna_is_hinged_down;  };
  Transition  { Start;                                sm_Antenna_to_parking_position;                                    a_antenna_to_hinge_down_starts;      g_antenna_to_hinge_down_preconditions; };
  Transition  { Start;                                Error;                                                             a_preconditions_are_not_met;        !g_antenna_to_hinge_down_preconditions; };
  Transition  { sm_Antenna_to_parking_position.Final; sm_X_drive_to_indexposition;                                                                            };
  Transition  { sm_Antenna_to_parking_position;       Error;                          ev_antenna_to_hinge_down_timeout;  a_antenna_to_hinge_down_timeout;     };
  Transition  { sm_Antenna_to_parking_position.Error; Error;                                                             a_antenna_to_hinge_down_interrupted; a_stop_timout_timer;  };
  Transition  { sm_X_drive_to_indexposition.Final;    sm_Y_drive_to_indexposition;                                                                            };
  Transition  { sm_X_drive_to_indexposition;          Error;                          ev_antenna_to_hinge_down_timeout;  a_antenna_to_hinge_down_timeout;     };
  Transition  { sm_X_drive_to_indexposition.Error;    Error;                                                             a_antenna_to_hinge_down_interrupted; };
  Transition  { sm_Y_drive_to_indexposition.Final;    Final;                                                             a_antenna_is_hinged_down;            a_stop_timout_timer;  };
  Transition  { sm_Y_drive_to_indexposition;          Error;                          ev_antenna_to_hinge_down_timeout;  a_antenna_to_hinge_down_timeout;     };
  Transition  { sm_Y_drive_to_indexposition.Error;    Error;                                                             a_antenna_to_hinge_down_interrupted; a_stop_timout_timer;  };
};
