Event ev_z_drive_move_up_starts,        ev_z_drive_move_up_moving,    ev_z_drive_move_up_preconditions_are_not_met;
Event ev_z_drive_move_up_interrupted,   ev_z_drive_move_up_timeout,   ev_z_drive_move_up_finished;
Event ev_z_drive_move_init;

Statemachine
{
  id  { sm_Z_drive_move_up;   };
  description { "Z_drive_move_up";    };
  States  { Initial;  Final;  Start;  Error;  };
  import  { sm_Z_drive_move;  };
  Actions
  {
    a_z_drive_move_up_start                             { ev_z_drive_move_up_starts;
                                                          ev_z_drive_move_init ( MODE_GIVEN_SPEED, 1 );
                                                          start_timer ( DEF_TIME_Z_FAHREN * s, ev_z_drive_move_up_timeout,   timer_z_drive_move_up_timeout );
                                                        };
    a_z_drive_move_up_preconditions_are_not_met         { ev_z_drive_move_up_preconditions_are_not_met;   };
    a_z_drive_move_up_moving                            { ev_z_drive_move_up_moving;      };
    a_z_drive_move_up_timeout                           { ev_z_drive_move_up_interrupted; };
    a_z_drive_move_up_interrupted                       { ev_z_drive_move_up_interrupted; };
    a_z_drive_stop_timout_timer                         { stop_timer ( timer_z_drive_move_up_timeout ); };
  };

  on_enter
  {
    z_drive.SollPos     = z_drive.MAX_POS;
//    z_drive.SollGeschw  = z_drive.SPEED_DEFAULT;
//    print ( "---------- Z_drive_move_up  ---------- on_enter, argv(1): ", argv(1), ", argv(2): ", argv(2), "\n" );

    print ( "sm_Z_drive_move_up.on_enter --- z_drive.SollGeschw:", z_drive.SollGeschw, "\n" );
  };

  on_exit
  {
    a_z_drive_stop_timout_timer;
  };

  Transition  { Initial;                Start;                                          a_z_drive_move_up_start;                                        g_z_drive_move_up_preconditions;   };
  Transition  { Initial;                Error;                                          a_z_drive_move_up_preconditions_are_not_met;                   !g_z_drive_move_up_preconditions;   };
  Transition  { Start;                  sm_Z_drive_move;  ev_z_drive_move_init;         a_z_drive_move_up_moving;                                     };
  Transition  { sm_Z_drive_move.Final;  Final;                                          a_z_drive_stop_timout_timer;                                  };
  Transition  { sm_Z_drive_move;        Error;            ev_z_drive_move_up_timeout;   a_z_drive_move_up_timeout;                                    };
  Transition  { sm_Z_drive_move.Error;  Error;                                          a_z_drive_move_up_interrupted;  a_z_drive_stop_timout_timer;  };
};

