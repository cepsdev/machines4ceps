// // raising antenna means: move Y-drive to 90Â°
Event ev_antenna_to_raise_starts, ev_antenna_to_rise_not_needed,  ev_antenna_to_rise_preconditions_are_not_met, ev_antenna_is_risen;
Event ev_antenna_to_rise_timeout, ev_antenna_to_rise_interrupted, ev_antenna_to_rise_was_interrupted;

Statemachine
{
  id  { sm_Antenna_to_raise;  };
  description { "Antenna_to_raise"; };
  States  { Initial;  Final;  Start;  Error;  };

  import  { sm_Y_drive_to_arbeitsposition; };

  Actions
  {
    a_antenna_to_rise_not_needed        { ev_antenna_to_rise_not_needed; };
    a_preconditions_are_not_met         { ev_antenna_to_rise_preconditions_are_not_met; };
    a_antenna_to_rise_starts            { ev_antenna_to_raise_starts;
                                          start_timer ( DEF_TIME_ANT_AUFRICHTEN * s, ev_antenna_to_rise_timeout,  timer_antenna_to_rise_timeout );
                                        };
    a_antenna_is_risen                  { ev_antenna_is_risen;  };
    a_antenna_to_rise_timeout           { ev_antenna_to_rise_interrupted; };
    a_antenna_to_rise_interrupted       { ev_antenna_to_rise_interrupted; };
    a_was_interrupted                   { ev_antenna_to_rise_was_interrupted; };
    a_stop_timout_timer                 { stop_timer ( timer_antenna_to_rise_timeout ); };
  };

  on_exit
  {
    if ( !in_state ( Final, Error ) )
    {
      a_stop_timout_timer;
      a_was_interrupted;
    };
  };

  Transition  { Initial;                              Final;                                                      a_antenna_to_rise_not_needed;                         g_y_drive_is_in_arbeitsposition;  };
  Transition  { Initial;                              Start;                                                      a_antenna_to_rise_starts;                            !g_y_drive_is_in_arbeitsposition;  };
  Transition  { Start;                                Error;                                                      a_preconditions_are_not_met;                         !g_antenna_to_rise_preconditions;  };
  Transition  { Start;                                sm_Y_drive_to_arbeitsposition;                                                                                    g_antenna_to_rise_preconditions;  };
  Transition  { sm_Y_drive_to_arbeitsposition;        Error;                          ev_antenna_to_rise_timeout; a_antenna_to_rise_timeout;                                                              };
  Transition  { sm_Y_drive_to_arbeitsposition.Error;  Error;                                                      a_antenna_to_rise_interrupted;  a_stop_timout_timer;                                    };
  Transition  { sm_Y_drive_to_arbeitsposition.Final;  Final;                                                      a_antenna_is_risen;             a_stop_timout_timer;                                    };
};

