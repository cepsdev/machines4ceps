
Globals
{
  // Redefinition for test acceleration
  TIMER_ACTIVATION = 0.1;
};

Antenna_to_raise_unittests
{
  SENSOR_AB_Y = 0;  //  g_y_drive_is_in_arbeitsposition
  SENSOR_IP_Z = 1;  //  g_z_drive_is_in_indexposition
  SENSOR_KAMPFSCHALTER_A            = 0;
};

Simulation
{
  TestCase{Antenna_to_raise_unittests;};Test{Initialization;};

  Start { sm_Antenna_to_raise;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Antenna_to_raise.sm_Y_drive_to_arbeitsposition;};

  //  stop simulation
  stop_timer ( timer_y_drive_to_arbeitsposition_timeout );
};


Simulation
{
  TestCase{Antenna_to_raise_unittests;};Test{Visit_all_states;};

  y_drive.IstPos = y_drive.INDEXPOSITION;

  Start { sm_Antenna_to_raise;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Antenna_to_raise.sm_Y_drive_to_arbeitsposition;};
  y_drive.Status.ANTRIEB_ENABLE_OUT = 1;
  ev_y_drive_can_state_response;
  y_drive.Status.ANTRIEB_BRAKE_RELEASED = 1;
  ev_y_drive_can_state_response;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Antenna_to_raise.sm_Y_drive_to_arbeitsposition;};
  SENSOR_AB_Y = 1;
  y_drive.IstPos ==  y_drive.ARBEITSPOSITION;
  ev_y_drive_stop;
  y_drive.Status.ANTRIEB_BRAKE_RELEASED = 0;
  ev_y_drive_can_state_response;
  y_drive.Status.ANTRIEB_ENABLE_OUT = 0;
  ev_y_drive_can_state_response;

//   ev_y_drive_is_in_arbeitsposition;
//   ASSERT_CURRENT_STATES_CONTAINS{sm_Antenna_to_raise.Final;};
};
