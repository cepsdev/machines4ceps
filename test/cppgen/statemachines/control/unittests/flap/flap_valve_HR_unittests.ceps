Flap_valve_HR_unittests {};

Simulation
{
  TestCase{Flap_valve_HR_unittests;};Test{Initialization;};

  Start { sm_Flap_valve_HR;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
};

// ------------------------------------------------------------------------  
Simulation
{
  TestCase{Flap_valve_HR_unittests;};Test{valve_open;};

  Start { sm_Flap_valve_HR;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};

  ev_flap_VHR_open;
  stop_timer ( timer_flap_VHR_is_open );
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Opening;};

  ev_flap_VHR_is_open;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Open;};
};

// ------------------------------------------------------------------------  
Simulation
{
  TestCase{Flap_valve_HR_unittests;};Test{valve_open_and_close;};

  Start { sm_Flap_valve_HR;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};

  ev_flap_VHR_open;
  stop_timer ( timer_flap_VHR_is_open );
  ev_flap_VHR_is_open;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Open;};

  ev_flap_VHR_close;
  stop_timer ( timer_flap_VHR_is_close );
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closing;};

  ev_flap_VHR_is_close;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
};

// ------------------------------------------------------------------------  
Simulation
{
  TestCase{Flap_valve_HR_unittests;};Test{valve_open_interrupted_with_close;};

  Start { sm_Flap_valve_HR;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};

  ev_flap_VHR_open;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Opening;};

  ev_flap_VHR_close;
  stop_timer ( timer_flap_VHR_is_close );
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closing;};

  ev_flap_VHR_is_close;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
};

// ------------------------------------------------------------------------  
Simulation
{
  TestCase{Flap_valve_HR_unittests;};Test{valve_close_interrupted_with_open;};

  Start { sm_Flap_valve_HR;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};

  ev_flap_VHR_open;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Opening;};

  ev_flap_VHR_close;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closing;};

  ev_flap_VHR_open;
  stop_timer ( timer_flap_VHR_is_open );
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Opening;};

  ev_flap_VHR_is_open;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Open;};
};

