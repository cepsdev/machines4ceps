// <description>
Event ev_total_nonsence;  //  arki: only needet to force transitions in statemachines

Globals
{
  // Redefinition for test acceleration
  TIMER_ACTIVATION = 0.1;
};

Flap_feature_unittests
{
  Flap_position = FLAP_POSITION_DEFAULT;

//   SENSOR_HR1O = 0;  //  HaubeRiegel1_Offen
//   SENSOR_HR1V = 0;  //  HaubeRiegel1_Verriegelt
//   SENSOR_HR2O = 0;  //  HaubeRiegel2_Offen
//   SENSOR_HR2V = 0;  //  HaubeRiegel2_Verriegelt
//  g_system_pressure_is_sufficient = 1;
  Pneumatics.system_pressure  = DEFAULT_SYSTEM_PRESSURE;  //  for BAG
  System_pressure             = DEFAULT_SYSTEM_PRESSURE;  //  for Dingo-Sim
  g_kampfschalter_is_active = 0;
};

Simulation
{
  TestCase{Flap_feature_unittests;};Test{Initialisation_Flap_is_Closed;};

  Flap_position = FLAP_POSITION_MIN;

  //  dingo
  Start { sm_Flap_valve_HR; };
  Start { sm_Flap_valve_HVZO; };
  Start { sm_Flap_valve_HVZON;  };
  Start { sm_Flap_valve_HVZS; };
  Start { sm_Flap_valve_HVZSN;  };
  Start { sm_Flap_lock_HR1;  };
  Start { sm_Flap_lock_HR2;  };
  Start { sm_Flap_position;  };
  Start { sm_Flap_endschalter_HZG;  };
  Start { sm_Flap_endschalter_HZO;  };
  Start { sm_Flap_endschalter_HR1O;  };
  Start { sm_Flap_endschalter_HR1V;  };
  Start { sm_Flap_endschalter_HR2O;  };
  Start { sm_Flap_endschalter_HR2V;  };
  //  BAG
  Start { sm_Flap;  };
  Start { sm_Flap_lock_one;  };
  Start { sm_Flap_lock_two;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZSN.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZG.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZO.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1V.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2V.On;};
};


Simulation
{
  TestCase{Flap_feature_unittests;};Test{Initialisation_Flap_is_Open;};

  Flap_position = FLAP_POSITION_MAX;

  //  dingo
  Start { sm_Flap_valve_HR; };
  Start { sm_Flap_valve_HVZO; };
  Start { sm_Flap_valve_HVZON;  };
  Start { sm_Flap_valve_HVZS; };
  Start { sm_Flap_valve_HVZSN;  };
  Start { sm_Flap_lock_HR1;  };
  Start { sm_Flap_lock_HR2;  };
  Start { sm_Flap_position;  };
  Start { sm_Flap_endschalter_HZG;  };
  Start { sm_Flap_endschalter_HZO;  };
  Start { sm_Flap_endschalter_HR1O;  };
  Start { sm_Flap_endschalter_HR1V;  };
  Start { sm_Flap_endschalter_HR2O;  };
  Start { sm_Flap_endschalter_HR2V;  };
  //  BAG
  Start { sm_Flap;  };
  Start { sm_Flap_lock_one;  };
  Start { sm_Flap_lock_two;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZSN.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZG.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZO.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1V.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2V.On;};
};


Simulation
{
  TestCase{Flap_feature_unittests;};Test{Run_flap_to_open_given_Closed;};

  Flap_position = FLAP_POSITION_MIN;

  //  dingo
  Start { sm_Flap_valve_HR; };
  Start { sm_Flap_valve_HVZO; };
  Start { sm_Flap_valve_HVZON;  };
  Start { sm_Flap_valve_HVZS; };
  Start { sm_Flap_valve_HVZSN;  };
  Start { sm_Flap_lock_HR1;  };
  Start { sm_Flap_lock_HR2;  };
  Start { sm_Flap_position;  };
  Start { sm_Flap_endschalter_HZG;  };
  Start { sm_Flap_endschalter_HZO;  };
  Start { sm_Flap_endschalter_HR1O;  };
  Start { sm_Flap_endschalter_HR1V;  };
  Start { sm_Flap_endschalter_HR2O;  };
  Start { sm_Flap_endschalter_HR2V;  };
  //  BAG
  Start { sm_Flap;  };
  Start { sm_Flap_lock_one;  };
  Start { sm_Flap_lock_two;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZSN.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZG.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZO.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1V.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2V.On;};

  Start { sm_Flap_to_open;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_to_open.sm_Flap_unlock;};

//  g_flap_is_locked   = 0;
//  g_flap_is_unlocked = 1;
//   SENSOR_HR1O = 1;  //  HaubeRiegel1_Offen
//   SENSOR_HR2O = 1;  //  HaubeRiegel2_Offen
// 
  stop_timer ( timer_flap_VHR_is_open );
  ev_flap_VHR_is_open;
  stop_timer ( timer_flap_HR1_is_open );
  ev_flap_HR1_is_open;
  stop_timer ( timer_flap_HR2_is_open );
  ev_flap_HR2_is_open;
  stop_timer ( timer_flap_HR1V_is_open );
  ev_flap_HR1V_is_open;
  stop_timer ( timer_flap_HR2V_is_open );
  ev_flap_HR2V_is_open;
  stop_timer ( timer_flap_HR1O_is_close );
  ev_flap_HR1O_is_close;
  stop_timer ( timer_flap_HR2O_is_close );
  ev_flap_HR2O_is_close;

//   ev_flap_lock_one_is_unlocked;
//   ev_flap_lock_two_is_unlocked;

  stop_timer ( timer_flap_HVZO_is_open );
  ev_flap_HVZO_is_open;
  stop_timer ( timer_flap_HVZS_is_open );
  ev_flap_HVZS_is_open;

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unlocked;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unlocked;};

  stop_timer ( timer_flap_preconditioning );
  ev_flap_preconditioning_finished;

  stop_timer ( timer_flap_HVZS_is_close );
  ev_flap_HVZS_is_close;

  print("--- dingo-sim --- flap opening ---\n");
  ev_flap_moving_time;

  print("--- dingo-sim --- flap is open ---\n");
  Flap_position = FLAP_POSITION_MAX;
  ev_flap_moving_time;

  stop_timer ( timer_flap_HVZO_is_close );
  ev_flap_HVZO_is_close;
  stop_timer ( timer_flap_VHR_is_close );
  ev_flap_VHR_is_close;
  stop_timer ( timer_flap_HR1_is_close );
  ev_flap_HR1_is_close;
  stop_timer ( timer_flap_HR2_is_close );
  ev_flap_HR2_is_close;
  stop_timer ( timer_flap_HR1O_is_open );
  ev_flap_HR1O_is_open;
  stop_timer ( timer_flap_HR2O_is_open );
  ev_flap_HR2O_is_open;
  stop_timer ( timer_flap_HR1V_is_close );
  ev_flap_HR1V_is_close;
  stop_timer ( timer_flap_HR2V_is_close );
  ev_flap_HR2V_is_close;
//   SENSOR_HR1O = 0;  //  HaubeRiegel1_Offen
//   SENSOR_HR1V = 1;  //  HaubeRiegel1_Verriegelt
//   ev_flap_lock_one_is_locked;
//  g_flap_is_locked   = 1;
//  g_flap_is_unlocked = 0;
//   SENSOR_HR2O = 0;  //  HaubeRiegel2_Offen
//   SENSOR_HR2V = 1;  //  HaubeRiegel2_Verriegelt
//   ev_flap_lock_two_is_locked;

  ASSERT_END_STATES_CONTAINS{sm_Flap_to_open.Final;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_lock_one.Locked;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_lock_two.Locked;};
  ASSERT_END_STATE_CONTAINS{sm_Flap.Open;};

  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZSN.Closed;};

  ASSERT_END_STATE_CONTAINS{sm_Flap_endschalter_HZO.On;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_endschalter_HZG.Off;};
};


Simulation
{
  TestCase{Flap_feature_unittests;};Test{Run_given_flap_is_already_open;};

  Flap_position = FLAP_POSITION_MAX;

  //  dingo
  Start { sm_Flap_valve_HR; };
  Start { sm_Flap_valve_HVZO; };
  Start { sm_Flap_valve_HVZON;  };
  Start { sm_Flap_valve_HVZS; };
  Start { sm_Flap_valve_HVZSN;  };
  Start { sm_Flap_lock_HR1;  };
  Start { sm_Flap_lock_HR2;  };
  Start { sm_Flap_position;  };
  Start { sm_Flap_endschalter_HZG;  };
  Start { sm_Flap_endschalter_HZO;  };
  Start { sm_Flap_endschalter_HR1O;  };
  Start { sm_Flap_endschalter_HR1V;  };
  Start { sm_Flap_endschalter_HR2O;  };
  Start { sm_Flap_endschalter_HR2V;  };
  //  BAG
  Start { sm_Flap;  };
  Start { sm_Flap_lock_one;  };
  Start { sm_Flap_lock_two;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZSN.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZG.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZO.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1V.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2V.On;};

  Start { sm_Flap_to_open;  };

  ASSERT_END_STATE_CONTAINS{sm_Flap_to_open.Final;};
  ASSERT_CURRENT_STATES_CONTAINS_NOT{sm_Flap_to_open.sm_Flap_precondition;};
  ASSERT_CURRENT_STATES_CONTAINS_NOT{sm_Flap_to_open.sm_Flap_unlock;};
  ASSERT_CURRENT_STATES_CONTAINS_NOT{sm_Flap_to_open.sm_Flap_open;};
  ASSERT_CURRENT_STATES_CONTAINS_NOT{sm_Flap_to_open.sm_Flap_lock;};
};


Simulation
{
  TestCase{Flap_feature_unittests;};Test{Run_flap_to_close_given_default_conditions;};

  Flap_position   = FLAP_POSITION_MIN;
  y_drive.IstPos  = y_drive.ARBEITSPOSITION;
  z_drive.IstPos  = z_drive.MAST_INDEXPOSITION;

  //  dingo
  Start { sm_Flap_valve_HR; };
  Start { sm_Flap_valve_HVZO; };
  Start { sm_Flap_valve_HVZON;  };
  Start { sm_Flap_valve_HVZS; };
  Start { sm_Flap_valve_HVZSN;  };
  Start { sm_Flap_lock_HR1;  };
  Start { sm_Flap_lock_HR2;  };
  Start { sm_Flap_position;  };
  Start { sm_Flap_endschalter_HZG;  };
  Start { sm_Flap_endschalter_HZO;  };
  Start { sm_Flap_endschalter_HR1O;  };
  Start { sm_Flap_endschalter_HR1V;  };
  Start { sm_Flap_endschalter_HR2O;  };
  Start { sm_Flap_endschalter_HR2V;  };
  //  BAG
  Start { sm_Flap;  };
  Start { sm_Flap_lock_one;  };
  Start { sm_Flap_lock_two;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZSN.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZG.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZO.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1V.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2V.On;};

  Start { sm_Flap_to_close; };

  ASSERT_END_STATE_CONTAINS{sm_Flap.Unknown;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_to_close.sm_Flap_precondition;};
};

/*
Simulation
{
  TestCase{Flap_feature_unittests;};Test{Flap_to_close_Close_Flap;};

  y_drive.IstPos  = y_drive.ARBEITSPOSITION;
  z_drive.IstPos  = z_drive.MAST_INDEXPOSITION;

  //  dingo
  Start { sm_Flap_valve_HR; };
  Start { sm_Flap_valve_HVZO; };
  Start { sm_Flap_valve_HVZON;  };
  Start { sm_Flap_valve_HVZS; };
  Start { sm_Flap_valve_HVZSN;  };
  Start { sm_Flap_lock_HR1;  };
  Start { sm_Flap_lock_HR2;  };
  Start { sm_Flap_position;  };
  Start { sm_Flap_endschalter_HZG;  };
  Start { sm_Flap_endschalter_HZO;  };
  Start { sm_Flap_endschalter_HR1O;  };
  Start { sm_Flap_endschalter_HR1V;  };
  Start { sm_Flap_endschalter_HR2O;  };
  Start { sm_Flap_endschalter_HR2V;  };
  //  BAG
  Start { sm_Flap;  };
  Start { sm_Flap_lock_one;  };
  Start { sm_Flap_lock_two;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZSN.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZG.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZO.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1V.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2V.On;};

  Start { sm_Flap_to_close; };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Open;};

  ev_flap_preconditioning_finished;

  ev_flap_lock_one_is_unlocked;

//  g_flap_is_locked   = 0;
//  g_flap_is_unlocked = 1;
  SENSOR_HR1O = 1;  //  HaubeRiegel1_Offen
  SENSOR_HR2O = 1;  //  HaubeRiegel2_Offen
  ev_flap_lock_two_is_unlocked;

  SENSOR_HR1O = 0;  //  HaubeRiegel1_Offen
  SENSOR_HR1V = 1;  //  HaubeRiegel1_Verriegelt
  ev_flap_lock_one_is_locked;
//  g_flap_is_locked   = 1;
//  g_flap_is_unlocked = 0;
  SENSOR_HR2O = 0;  //  HaubeRiegel2_Offen
  SENSOR_HR2V = 1;  //  HaubeRiegel2_Verriegelt
  ev_flap_lock_two_is_locked;

  ASSERT_END_STATE_CONTAINS{sm_Flap_to_close.Final;};
  ASSERT_END_STATE_CONTAINS{sm_Flap.Closed;};

  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_valve_HVZSN.Closed;};

  ASSERT_END_STATE_CONTAINS{sm_Flap_endschalter_HZO.Off;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_endschalter_HZG.On;};
};
*/

Simulation
{
  TestCase{Flap_feature_unittests;};Test{Run_flap_to_close_given_flap_is_already_closed;};

  Flap_position = FLAP_POSITION_MIN;

  //  dingo
  Start { sm_Flap_valve_HR; };
  Start { sm_Flap_valve_HVZO; };
  Start { sm_Flap_valve_HVZON;  };
  Start { sm_Flap_valve_HVZS; };
  Start { sm_Flap_valve_HVZSN;  };
  Start { sm_Flap_lock_HR1;  };
  Start { sm_Flap_lock_HR2;  };
  Start { sm_Flap_position;  };
  Start { sm_Flap_endschalter_HZG;  };
  Start { sm_Flap_endschalter_HZO;  };
  Start { sm_Flap_endschalter_HR1O;  };
  Start { sm_Flap_endschalter_HR1V;  };
  Start { sm_Flap_endschalter_HR2O;  };
  Start { sm_Flap_endschalter_HR2V;  };
  //  BAG
  Start { sm_Flap;  };
  Start { sm_Flap_lock_one;  };
  Start { sm_Flap_lock_two;  };

  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_one.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_lock_two.Unknown;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HR.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZO.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZON.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZS.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_valve_HVZSN.Closed;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZG.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HZO.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR1V.On;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2O.Off;};
  ASSERT_CURRENT_STATES_CONTAINS{sm_Flap_endschalter_HR2V.On;};

  Start { sm_Flap_to_close; };

  ev_flap_preconditioning_finished;

  ASSERT_END_STATE_CONTAINS{sm_Flap.Unknown;};
  ASSERT_END_STATE_CONTAINS{sm_Flap_to_close.Final;};
};
