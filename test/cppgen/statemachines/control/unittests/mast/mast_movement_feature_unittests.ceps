Event ev_z_drive_move, ev_z_drive_moving_timeout, ev_z_drive_enable_timeout;
// <description>

Globals
{
  // Redefinition for test acceleration
  TIMER_ACTIVATION = 0.1;
};

Mast_movement_feature_unittests
{
  g_z_drive_has_antrieb_fault = 0;
  g_z_drive_is_operational    = 1;
};

Statemachine
{
  id  { sm_Ctrl;  };
  import  { sm_Z_drive_move;  };
  States  { Initial;  Final;  Error;  };
  Actions
  {
    a_report_enable_timeout { print("\n\n--- ENABLE TIMEOUT DETECTED ---\n\n"); };
    a_report_moving_timeout { print("\n\n--- MOVING TIMEOUT DETECTED ---\n\n"); };
  };
  Transition  { Initial;          sm_Z_drive_move;  ev_z_drive_move;  };
  Transition  { sm_Z_drive_move;  Final;            ev_z_drive_movement_stopped;  };
  Transition  { sm_Z_drive_move;  Error;            ev_z_drive_enable_timeout;  };
  Transition  { sm_Z_drive_move;  Error;            ev_z_drive_moving_timeout;  a_report_moving_timeout;  };
};

Simulation
{
  TestCase{Mast_movement_feature_unittests;};Test{Move_up_to_target_position;};

  z_drive.IstPos      = 0;
  z_drive.SollGeschw  = 5.0;

  Start { sm_Ctrl;  };
  Start { sm_Z_drive_state; };
  Start { sm_Z_drive;};

  // activate Z_drive_move
  ev_z_drive_move(MODE_TO_TARGET,  5, WITH_ENABLE_TIMEOUT, WITH_MOVING_TIMEOUT);
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Prepare_Talin;};

  // pretend that TALIN is prepared
  ev_talin_is_ready_to_be_moved;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Moving;};

  ASSERT_EVENTUALLY_VISIT_STATES{sm_Ctrl.Final;};
  ASSERT_EVENTUALLY_VISIT_STATES{sm_Z_drive_state.Idle;};
};

Simulation
{
  TestCase{Mast_movement_feature_unittests;};Test{Move_down_to_target_position;};

  z_drive.IstPos      = 20;
  z_drive.SollGeschw  = 5.0;

  Start { sm_Ctrl;  };
  Start { sm_Z_drive_state; };
  Start { sm_Z_drive; };

  // activate Z_drive_move
  ev_z_drive_move(MODE_TO_TARGET, 15, WITH_ENABLE_TIMEOUT, WITH_MOVING_TIMEOUT);
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Prepare_Talin;};

  // pretend that TALIN is prepared
  ev_talin_is_ready_to_be_moved;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Moving;};

  ASSERT_EVENTUALLY_VISIT_STATES{sm_Ctrl.Final;};
  ASSERT_EVENTUALLY_VISIT_STATES{sm_Z_drive_state.Idle;};
};

Simulation
{
  TestCase{Mast_movement_feature_unittests;};Test{Move_up_given_speed;};

  Start { sm_Ctrl;  };
  Start { sm_Z_drive_state; };
  Start { sm_Z_drive; };

  z_drive.IstPos      = 0;

  // activate Z_drive_move
  ev_z_drive_move(MODE_GIVEN_SPEED,  2, WITH_ENABLE_TIMEOUT, WITH_MOVING_TIMEOUT);
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Prepare_Talin;};

  // pretend that TALIN is prepared
  ev_talin_is_ready_to_be_moved;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Moving;};

  start_timer(2.0*s,  ev_z_drive_stop);

  ASSERT_EVENTUALLY_VISIT_STATES{sm_Ctrl.Final;};
  ASSERT_EVENTUALLY_VISIT_STATES{sm_Z_drive_state.Idle;};
};

Simulation
{
  TestCase{Mast_movement_feature_unittests;};Test{Move_down_given_speed;};

  z_drive.IstPos      = 20;

  Start { sm_Ctrl;  };
  Start { sm_Z_drive_state; };
  Start { sm_Z_drive; };

  // activate Z_drive_move
  ev_z_drive_move(MODE_GIVEN_SPEED, -2, WITH_ENABLE_TIMEOUT, WITH_MOVING_TIMEOUT);
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Prepare_Talin;};

  // pretend that TALIN is prepared
  ev_talin_is_ready_to_be_moved;
  ASSERT_CURRENT_STATES_CONTAINS{sm_Ctrl.sm_Z_drive_move.Moving;};

  start_timer(2.0*s,  ev_z_drive_stop);

  ASSERT_EVENTUALLY_VISIT_STATES{sm_Ctrl.Final;};
  ASSERT_EVENTUALLY_VISIT_STATES{sm_Z_drive_state.Idle;};
};
