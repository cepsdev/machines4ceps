/* out_frames.hpp 
   CREATED Wed Jun 22 14:10:32 2016

   GENERATED BY the sm4ceps C++ Generator VERSION 0.50 (c) Tomas Prerovsky <tomas.prerovsky@gmail.com>, ALL RIGHTS RESERVED. 
   Requires C++1y compatible compiler (use --std=c++1y for g++) 
   BASED ON cepS VERSION 1.1 (Jun  1 2016) BUILT WITH GCC 5.2.1 20151010 on GNU/LINUX 64BIT (C) BY THE AUTHORS OF ceps (ceps is hosted at github: https://github.com/cepsdev/ceps.git) 
   THIS IS A GENERATED FILE. DO NOT MODIFY.
*/


namespace raw_frm_dcls{
 struct frame_heartbeat_x_drive{
 };
 struct frame_heartbeat_y_drive{
 };
 struct frame_heartbeat_z_drive{
 };
 struct frame_heartbeat_io_module{
 };
 struct frame_heartbeat_si_module{
 };
 struct frame_heartbeat_usv_1{
 };
 struct frame_heartbeat_usv_2{
 };
 struct frame_heartbeat_extbg{
 };
 struct frame_heartbeat_bag{
 };
 struct frame_heartbeat_generic{
 };
 struct frame_set_operational{
 };
 struct frame_drive_request_x{
 };
 struct frame_drive_request_y{
 };
 struct frame_drive_request_z{
 };
 struct frame_x_drive_response{
 };
 struct frame_y_drive_response{
 };
 struct frame_z_drive_response{
 };
 struct frame_x_drive_emcy{
 };
 struct frame_y_drive_emcy{
 };
 struct frame_z_drive_emcy{
 };
 struct io_modul_betriebsart{
 };
 struct io_modul_ansteuerung_ausgaenge{
 };
 struct io_modul_force_pdo_transmit_hv{
 };
 struct io_modul_geraetestatus{
 };
 struct io_modul_zustand_heckverteiler_1{
 };
 struct io_modul_zustand_heckverteiler_2{
 };
 struct io_modul_sensordaten{
 };
 struct io_modul_fahrzeugwinkel{
 };
 struct io_modul_luftdruck_pneumatiktank{
 };
 struct io_modul_software_version{
 };
 struct io_modul_fehler{
 };
 struct io_modul_rueckmeldung_ios{
 };
 struct io_modul_sensordaten_windmesser{
 };
 struct si_modul_betriebsart{
 };
 struct si_modul_ansteuerung_ausgaenge{
 };
 struct si_modul_force_pdo_transmit_hv{
 };
 struct si_modul_geraetestatus{
 };
 struct si_modul_digitale_eingaenge{
 };
 struct si_modul_analoge_eingaenge_1{
 };
 struct si_modul_analoge_eingaenge_2{
 };
 struct si_modul_analoge_eingaenge_3{
 };
 struct si_modul_analoge_eingaenge_4{
 };
 struct si_modul_analoge_eingaenge_5{
 };
 struct si_modul_analoge_eingaenge_6{
 };
 struct si_modul_analoge_eingaenge_7{
 };
 struct si_modul_analoge_eingaenge_8{
 };
 struct frame_messwerte_navigation{
 };
 struct frame_zustand_plattform{
 };
 struct frame_betriebsstunden{
 };
 struct frame_zustand_komponenten{
 };
 struct frame_motordaten{
 };
 struct frame_zustand_ruestsatz{
 };
 struct frame_bag_software_version{
 };
 struct frame_bag_betriebsmodus{
 };
 struct frame_bag_piktogramme{
 };
 struct frame_extbg_fortschritt_automatikbetrieb{
 };
 struct frame_extbg_x_drive_sollwerte{
 };
 struct frame_extbg_y_drive_sollwerte{
 };
 struct frame_extbg_z_drive_sollwerte{
 };
 struct frame_force_bag_pdo_transmit{
 };
 struct frame_betriebsart{
 };
 struct frame_extbg_taster_betaetigung{
 };
 struct frame_extbg_taster_manuell_betaetigung{
 };
 struct frame_GPM_13{
 };
 struct frame_GPM_14{
 };
 struct frame_GPM_16{
 };
}
