<% include header %>

<style>
</style>
    
<body>
    <div id="wrapper">
        
    <% include navbar %>
      
    <div id="page-wrapper">
        <div class="row">
            <div class="col-lg-1"></div>
            <div class="col-lg-10">
                <h1 class="page-header">Available Simulations</h1>
            </div>
            <div class="col-lg-1" style="text-align:right;">
             <span id="available_simulations_table_loading_info" >
              <div class="loader"  style="margin:10px;float:right;"></div>
             </span>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-1"></div>
            <div class="col-lg-10">
             <table width="100%" class="table table-striped table-bordered table-hover" id="available_simulations_table">                                
             </table>
             <hr/>
            </div>            
        </div>
            <!-- /.row -->

   
        <div class="row">
                <div class="col-lg-12" id="tasks_list">
                    <div class="alert alert-info alert-dismissable">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Streaming CAN messages from/to your computer requires the </strong>
                      <button type="button" class="btn btn-default navbar-btn" onclick="$('#action_download_canmapper_dialog').modal();">
                        <span class="glyphicon glyphicon-cloud-download" aria-hidden="true"></span>&nbsp;CAN Mapping Tool
                      </button>
                    .
                    </div>
                </div>
            <!-- /.row -->
        </div>



        <!-- /#page-wrapper -->
    </div>

    <!-- /#wrapper -->
</div>


<script src="/jquery/js/jquery.min.js"></script>
<script src="/bootstrap/js/bootstrap.min.js"></script>
<script src="/jquery-ui/jquery-ui.min.js"></script>
<script src="/datatables/js/jquery.dataTables.min.js"></script>
<script src="/datatables-plugins/dataTables.bootstrap.min.js"></script>
<script src="/datatables-responsive/dataTables.responsive.js"></script>
<script src="/chartjs/Chart.js"></script>
<script src="/bootstrap-notify/bootstrap-notify.js"></script>
<script src="/cepscloud-ui/widget_properties_panel.js"></script>
<script src="/cepscloud-ui/widget_toggle_signal.js"></script>
<script src="/cepscloud-ui/widget_plot_signal.js"></script>
<script src="/cepscloud-ui/persistence.js"></script>

<script>
  let sim_cores = undefined;
  let current_info = undefined;
  let hub_url = undefined;
  let update_available_simulations_table_time_elapsed_to_retry_connect = undefined;
  let command_ws_url = "<%=command_ws_url%>";
  let update_available_simulations_table_retry_timeout = undefined;
</script>

<script>
    var available_simulations_table_ctrl= undefined;
    var available_simulations_table_columns = [
            { title: "Name" },
            { title: "Repository" },
            { title: "Status" },
            { title: "Action" }
       ];
    function stop_update_available_simulations_table_retry_timeout() {
            if (update_available_simulations_table_retry_timeout == undefined) return;
            window.clearTimeout(update_available_simulations_table_retry_timeout);
            update_available_simulations_table_retry_timeout = undefined;
    }
    function sim_core_info_changed(a,b){
        if (b == undefined) return true;
        if (a.length != b.length) return true;
        for(let e of a){
            let found = false;
            for(ee of b){
                if (ee.name == e.name){
                    if (ee.status != e.status) return true;
                    found=true;break;
                }
            }
            if (!found) return true;
        }        
        return false;
    }

    function update_available_simulations_table(){
        
        $("#available_simulations_table_loading_info").css("display","");
        function main(info){            
         if (sim_core_info_changed(info.sim_cores,sim_cores)){ 
            console.log("Simulation Cores Table Changed");
            sim_cores = info.sim_cores;
            do_update_available_simulations_table(available_simulations_table_columns);            
         }
         setTimeout(() => {$("#available_simulations_table_loading_info").css("display","none");},800);
         setTimeout(() => {update_available_simulations_table();},5000);
        }

        let command_ws = new WebSocket(command_ws_url);
        command_ws.addEventListener("open", on_ws_initial_connect);
        command_ws.addEventListener("close", on_ws_close);
        command_ws.addEventListener("error", on_ws_error);        
        function on_ws_initial_connect(){
            command_ws.addEventListener("message", (msg_raw)=>{
                console.log(msg_raw.data);
                let msg = JSON.parse(msg_raw.data);
                if (msg.ok){
                    main(msg.result);
                }
            });
            command_ws.send('{"cmd":"info"}');
        }

        function on_ws_close(){}
        function on_ws_error(){
            update_available_simulations_table_time_elapsed_to_retry_connect = 10;
            let msgbox = $.notify({/* options*/message: `Failed to connect with cepSCloud <small>(url:${command_ws_url})</small>
                <p></p>
                <button type="button" 
                        class="btn btn-primary btn-xs" 
                        data-dismiss="alert" 
                        onclick="stop_update_available_simulations_table_retry_timeout();update_available_simulations_table();">
                        Try again in
                        <span id="info_btn_log_again">${update_available_simulations_table_time_elapsed_to_retry_connect}</span> seconds</button>&nbsp;&nbsp;`
            },
                {/*settings*/ delay: 0, type: 'danger', showProgressbar: false,
                    animate: { enter: 'animated zoomInDown', exit: 'animated zoomOutUp' }
                }
            );
            function time_elapsed_to_retry_connect_fn(){
                --update_available_simulations_table_time_elapsed_to_retry_connect;
                if (update_available_simulations_table_time_elapsed_to_retry_connect <= 0) {
                    if (msgbox != undefined) {
                        msgbox.close();
                        setTimeout(() => { update_available_simulations_table(); }, 100);
                    }
                } else {
                    $("#info_btn_log_again").html(update_available_simulations_table_time_elapsed_to_retry_connect.toString());
                    update_available_simulations_table_retry_timeout = setTimeout(time_elapsed_to_retry_connect_fn, 1000);
                }
            }
            update_available_simulations_table_retry_timeout = setTimeout(time_elapsed_to_retry_connect_fn, 1000);
        }

        function do_update_available_simulations_table(cols){
            let dt = [];
            let ctr = 0;
            for (let e of sim_cores) {
                
                ++ctr;
                let status_html = "";
                if (e.status == "down")
                 status_html = `<span class="label label-warning">Down</span>`;
                dt.push([`<a href="#" id="sel_sim_${ctr}" >`+e.name+"</a>",
                "--",
                `${status_html}`,
                "--"]);
            }
            
            if (available_simulations_table_ctrl == undefined){
                available_simulations_table_ctrl = $('#available_simulations_table').DataTable({
                select: {
                    style: 'single'
                },
                data: dt,
                columns: cols
                });
            } else available_simulations_table_ctrl.clear().rows.add(dt).draw()
        }        
    } 
    function main(){
        update_available_simulations_table();
    }
</script>

<script>
   var do_action_add_behaviour; 
   $(document).ready(function() {
     main();
    });
</script>

</body>
</html>