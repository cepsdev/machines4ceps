<% include header %>

<!-- jQuery -->
<script src="../vendor/jquery/jquery.min.js"></script>
<!-- Bootstrap Core JavaScript -->
<script src="../vendor/bootstrap/js/bootstrap.min.js"></script>
<!-- Metis Menu Plugin JavaScript -->
<script src="../vendor/metisMenu/metisMenu.min.js"></script>

<!-- DataTables CSS -->
<link href="../vendor/datatables-plugins/dataTables.bootstrap.css" rel="stylesheet">

<!-- DataTables Responsive CSS -->
    <link href="../vendor/datatables-responsive/dataTables.responsive.css" rel="stylesheet">
<!-- Custom Fonts -->
<link href="../vendor/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">

<!-- DataTables JavaScript -->
<script src="../vendor/datatables/js/jquery.dataTables.min.js"></script>
<script src="../vendor/datatables-plugins/dataTables.bootstrap.min.js"></script>
<script src="../vendor/datatables-responsive/dataTables.responsive.js"></script>
<script src="../vendor/dropzone/dropzone.js"></script>
<script src="../vendor/progressbar/progressbar.js"></script>

<!-- Custom Theme JavaScript -->
<script src="../dist/js/sb-admin-2.js"></script>

<style>
.std_loader {
  border: 5px solid #f3f3f3;
  border-radius: 60%;
  border-top: 5px solid #3498db;
  width: 20px;
  height: 20px;
  animation: spin 0.6s linear infinite;
}
.std_loader_stopped {
  border: 5px solid #f3f3f3;
  border-radius: 60%;
  border-top: 5px solid #3498db;
  width: 20px;
  height: 20px;
  
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

</style>
    
<body>
    <div id="wrapper">
        
        <% include navbar %>





        
    <div id="page-wrapper">
        <div class="row">
                <div class="col-lg-12">
                    <h1 class="page-header">Available Simulations</h1>
                </div>
            <!-- /.row -->
        </div>





         <div class="row">
            <div class="col-lg-12">
                            <table width="100%" class="table table-striped table-bordered table-hover" id="available_simulations_table">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th></th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% sim_cores.forEach( function(sim_core){ %>
                                    <% if(sim_core.dont_launch) return; %>
                                    <tr class="odd gradeX">
                                        <td><a href=<%= sim_core.uri %> > <%= sim_core.name %> </a></td>
                                        <td>
                                            <div class="btn-group">
                                            <button type="button" class="btn btn-primary">Action</button>
                                            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="caret"></span>
                                                <span class="sr-only">Toggle Dropdown</span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a href="#" onclick="do_action_add_behaviour('<%= sim_core.name %>','<%= sim_core.uri %>');" >Add Behaviour</a></li>
                                                <li role="separator" class="divider"></li>
                                                <li><a href="#">Remove</a></li>
                                            </ul>
                                            </div>
                                        </td>
                                        <td><%= sim_core.get_status()%></td>
                                    </tr>
                                    <% });  %>
                                </tbody>
                            </table>
                        </div>
            </div>
            <!-- /.row -->

   
        <div class="row">
                <div class="col-lg-12" id="tasks_list">
                    <div class="alert alert-info alert-dismissable">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Streaming CAN messages from/to your computer requires the </strong>
                      <button type="button" class="btn btn-default navbar-btn" onclick="$('#action_download_canmapper_dialog').modal();">
                        <span class="glyphicon glyphicon-cloud-download" aria-hidden="true"></span>&nbsp;CAN Mapping Tool
                      </button>
                    .
                    </div>
                </div>
            <!-- /.row -->
        </div>



        <!-- /#page-wrapper -->
    </div>

    <!-- /#wrapper -->
</div>






<div class="modal fade" tabindex="-1" role="dialog" id="action_download_canmapper_dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <span class="glyphicon glyphicon-cloud-download" aria-hidden="true"></span>&nbsp;CAN Mapping Tool
      </div>
      <div class="modal-body">

        <ul class="list-group">
            <li class="list-group-item">
                <img src="img/ubuntu_orange_hex.svg" style="width:100px">
                <button class="btn btn-primary" type="button" data-dismiss="modal" onclick="window.open('cepscloud_canmapper');" >Get CAN Mapper for Ubuntu 16.04 LTS</button>
            </li>
        </ul>

           
              
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->









<div class="modal fade" tabindex="-1" role="dialog" id="action_add_fibex_dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Create Simulation</h4>
      </div>
      <div class="modal-body">
        <div class="input-group">
                 <span class="input-group-addon" id="basic-addon1">Simulation's name</span>
                 <input id ="action_add_fibex_dialog_sim_name" type="text" class="form-control" placeholder="Type here" aria-describedby="basic-addon1">
           </div> 
            <p></p>
           <div class="input-group">

            <span class="input-group-addon" id="basic-addon2">
            <div class="panel panel-default">
             <div class="panel-heading">Select files for upload</div>
             <table class="table">
                 <thead>
                    <th>Name</th>
                    <th>Mime Type</th>
                    <th>Size</th>
                    <th>Modification Date</th>
                    <th>Status</th>
                 </thead>
                <tbody id = "action_add_fibex_dialog_file_picker_list">
                </tbody>
             </table>
             </span>
             <input type="file" class="form-control" id="action_add_fibex_dialog_file_picker" aria-describedby="basic-addon2" multiple />
            </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="action_add_fibex_dialog_btn_send" disabled="gaga" data-dismiss="modal">Send</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" tabindex="-1" role="dialog" id="action_add_behaviour_dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Add Behaviour</h4>
      </div>
      <div class="modal-body">
        <div class="input-group">
                 <span class="input-group-addon" id="basic-addon1">Simulation's name</span>
                 <input id ="action_add_behaviour_dialog_sim_name" type="text" class="form-control" placeholder="Type here" aria-describedby="basic-addon1" disabled>
           </div> 
            <p></p>
           <div class="input-group">

            <span class="input-group-addon" id="basic-addon2">
            <div class="panel panel-default">
             <div class="panel-heading">Select files for upload</div>
             <table class="table">
                 <thead>
                    <th>Name</th>
                    <th>Mime Type</th>
                    <th>Size</th>
                    <th>Modification Date</th>
                    <th>Status</th>
                 </thead>
                <tbody id = "action_add_behaviour_dialog_file_picker_list">
                </tbody>
             </table>
             </span>
             <input type="file" class="form-control" id="action_add_behaviour_dialog_file_picker" aria-describedby="basic-addon2" multiple />
            </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="action_add_behaviour_dialog_btn_send" disabled="gaga" data-dismiss="modal">Send</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->





 <script>
   var do_action_add_behaviour; 
   $(document).ready(function() {
        let initial_dialog_create_fibex_based_sim = {
          files : undefined,
          name : undefined,
          file_status : [] ,
          file_readers : [],
          current_step : undefined //"upload_files","wait_for_ceps_create","wait_for_proc_spawn"
        } ;
        let dialog_create_fibex_based_sim = undefined;
        let dialog_add_behaviour_sim = undefined;

        const FILE_STATUS_PROCESSING = 0;
        const FILE_STATUS_VALIDATION = 1;
        const FILE_STATUS_OK         = 2;

        let task_counter = 0;

        let active_tasks = [];




        function start_task_create_fibex_based_sim(description){
            let task_id = task_counter++;
            dialog_create_fibex_based_sim.current_step ="upload_files";
            $("#tasks_list").html($("#tasks_list").html()+
                '<div id="task_info_'+task_id+'" class= "alert alert-warning alert-dismissable">'+
                        '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'+
                        '<div class="panel panel-default"><div class="panel-heading"><h4>Creating Simulation  <strong>'+description.name+'</strong></h4></div>'+
                        '<div class="panel-body">'+
                         '<ul class="list-group">'+
                            '<li class="list-group-item">'+
                                '<table style="width:100%"><tr>'+
                                    '<td style="width:40px"><div id="task_create_fibex_sim_info_step_1_'+task_id+'" class="std_loader" style="width:20px,height:20px,margin:0px,display: inline-block,white-space: nowrap"></div></td>'+
                                    '<td><h5 style="margin:10px">Upload files.</h5></td>'+
                                    '</tr></table>'+
                            '</li>'+
                            '<li class="list-group-item">'+
                                '<table style="width:100%"><tr>'+
                                    '<td style="width:40px"><div id="task_create_fibex_sim_info_step_2_'+task_id+'" class="std_loader_stopped" style="width:20px,height:20px,margin:0px,display: inline-block,white-space: nowrap"></div></td>'+
                                    '<td><h5 style="margin:10px">Create <kbd>cepS</kbd> structure. </h5></td>'+
                                    '</tr></table>'+
                            '</li>'+
                            '<li class="list-group-item">'+
                                '<table style="width:100%"><tr>'+
                                    '<td style="width:40px"><div id="task_create_fibex_sim_info_step_3_'+task_id+'" class="std_loader_stopped" style="width:20px,height:20px,margin:0px,display: inline-block,white-space: nowrap"></div></td>'+
                                    '<td><h5 style="margin:10px">Spawn new simulation core. </h5></td>'+
                                    '</tr></table>'+
                            '</li>'+

                         '</ul>'+
                        '</div>'+
                        '</div>'+
                        ''+
                '</div>'
            );
          
            let ws_cmd = new WebSocket("<%= command_ws_url %>");
            
            ws_cmd.onopen = function(e){
                let v = [];
                let u = [];
                
                description.file_readers.forEach( function(fr){
                  v.push(fr.result);  
                });
                for(let i = 0; i != description.files.length;++i){
                    let f = description.files.item(i);
                    u.push(f.name);
                }
                            
                ws_cmd.onmessage = function(msg){
                    let m = JSON.parse(msg.data);
                    if (m.ok){
                     let i = -1;
                     if(description.current_step == "upload_files"){
                     description.current_step = "wait_for_ceps_create";i = 1;
                     } else if (description.current_step == "wait_for_ceps_create") {
                     description.current_step =  "wait_for_proc_spawn";i = 2;
                     } else if (description.current_step ==  "wait_for_proc_spawn") {
                        ws_cmd.close();
                        i = 3;                        
                        $("#task_info_"+task_id).removeClass("alert-warning").addClass("alert-success");
                        $("#tasks_list").html(
                          $("#tasks_list").html()+
                          '<div  class= "alert alert-success alert-dismissable">'+
                          '<strong>A new simulation is ready: <a href="/'+m.uri+'">'+m.uri+'</a></strong>'+
                          '</div>' 
                        );
                     } else {
                        ws_cmd.close();
                     }
                     if(i >= 0) $("#task_create_fibex_sim_info_step_"+i.toString()+"_"+task_id.toString()).removeClass("std_loader").removeClass("std_loader_stopped")
                                                                                              .html('<span class="glyphicon glyphicon-ok"></span>');
                     if(i>= 0 && i < 3) $("#task_create_fibex_sim_info_step_"+(i+1).toString()+"_"+task_id.toString()).addClass("std_loader");
                    } else {
                     ws_cmd.close();
                     let i = 3;                   
                     if(description.current_step == "upload_files") i = 1;
                     else if (description.current_step == "wait_for_ceps_create") i = 2;
                     $("#task_create_fibex_sim_info_step_"+i.toString()+"_"+task_id.toString()).removeClass("std_loader").removeClass("std_loader_stopped");
                     $("#task_create_fibex_sim_info_step_"+i.toString()+"_"+task_id.toString()).html('<span class="glyphicon glyphicon-remove"></span>');
                     $("#task_info_"+task_id).removeClass("alert-warning").addClass("alert-danger");
                    }
                }
                ws_cmd.send(JSON.stringify({cmd:"create_fibex_based_simulation",name:description.name, data: v , file_names:u}));
            }
            active_tasks.push({id:task_id,descr:description,ws:ws_cmd});
            return task_id;
        }


        function update_action_add_fibex_dialog_btn_send(){
            if(dialog_create_fibex_based_sim_input_complete()) 
             $("#action_add_fibex_dialog_btn_send").removeAttr("disabled");
            else if (!$("#action_add_fibex_dialog_btn_send").attr("disabled")){
             $("#action_add_fibex_dialog_btn_send").attr("disabled","true");
            }
        }

        function dialog_create_fibex_based_sim_input_complete(){
            let r = dialog_create_fibex_based_sim.files != undefined && 
                dialog_create_fibex_based_sim.name != undefined && 
                dialog_create_fibex_based_sim.name.length && 
                dialog_create_fibex_based_sim.files.length ;
            if (r){
                for(let i = 0; i != dialog_create_fibex_based_sim.file_status.length;++i){
                 if(dialog_create_fibex_based_sim.file_status[i] != FILE_STATUS_OK) return false;
                }
            }
            return r;
        }

        $('#available_simulations_table').DataTable({
            responsive: true
        });

        $("#action_add_fibex").click(function (e) {
            e.preventDefault();
            dialog_create_fibex_based_sim=initial_dialog_create_fibex_based_sim;
            $('#action_add_fibex_dialog').modal();
        });

        function handleFileSelect(evt) {
            let files = evt.target.files; // FileList object
            dialog_create_fibex_based_sim.files = files;
            // files is a FileList of File objects. List some properties.
            let output = [];
            dialog_create_fibex_based_sim.file_status = [];
            dialog_create_fibex_based_sim.file_readers = [];
            
            for (let i = 0, f; f = files[i]; i++) {
                output.push(
                  '<tr><td>', escape(f.name), '</td>', 
                  '<td>', f.type || 'n/a', '</td><td> ',
                  f.size, '</td><td>',
                  f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                  '</td>',
                  '<td>',
                  '<div class="progress">',
                  '<div id="prgrs_',i.toString(),'" ',
                  'class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">',
                  '<span class="sr-only"></span>',
                  '</div>',
                  '</div>', 
                  '</td>',
                  '</tr>'
                );
          
                dialog_create_fibex_based_sim.file_status.push(FILE_STATUS_PROCESSING);
                let fr = new FileReader();
                dialog_create_fibex_based_sim.file_readers.push(fr);
                fr.onabort = function(evt){};
                fr.onload = function(evt){
                    dialog_create_fibex_based_sim.file_status[i] = FILE_STATUS_OK;
                    $("#prgrs_"+i.toString()).css("width", "100%").attr("aria-valuenow", "100")
                                             .attr("class","progress-bar progress-bar-success progress-bar-striped");
                    update_action_add_fibex_dialog_btn_send();
                };
                fr.onerror = function(evt){};
                fr.onprogress = function(evt){};
                fr.readAsText(f);
            }
            $('#action_add_fibex_dialog_file_picker_list').html(output.join(''));
            update_action_add_fibex_dialog_btn_send();
        }
        $("#action_add_fibex_dialog_file_picker").change(handleFileSelect);
        $("#action_add_fibex_dialog_btn_send").click(function(evt){
           start_task_create_fibex_based_sim(dialog_create_fibex_based_sim);
           
        });
        let t = function (evt){
          dialog_create_fibex_based_sim.name = $('#action_add_fibex_dialog_sim_name').val();
          update_action_add_fibex_dialog_btn_send();
        };
        $("#action_add_fibex_dialog_sim_name").blur(t);
        $("#action_add_fibex_dialog_sim_name").change(t);
        
        //========================================================================
        //======================= Add Behaviour Dialog ===========================
        //========================================================================
        
        


        function start_task_add_behaviour(description){
            let task_id = task_counter++;
            $("#tasks_list").html($("#tasks_list").html()+
                '<div id="task_info_'+task_id+'" class= "alert alert-warning alert-dismissable">'+
                        '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'+
                        '<div class="panel panel-default"><div class="panel-heading"><h4>Add Behaviour To  <strong>'+description.name+'</strong></h4></div>'+
                        '<div class="panel-body">'+
                         '<ul class="list-group">'+
                            '<li class="list-group-item">'+
                                '<table style="width:100%"><tr>'+
                                    '<td style="width:40px"><div id="task_add_behaviour_step_1_'+task_id+'" class="std_loader" style="width:20px,height:20px,margin:0px,display: inline-block,white-space: nowrap"></div></td>'+
                                    '<td><h5 style="margin:10px">Upload files.</h5></td>'+
                                    '</tr></table>'+
                            '</li>'+
                          '</ul>'+
                        '</div>'+
                        '</div>'+
                        ''+
                '</div>'
            );
          
            let ws_cmd = new WebSocket("<%= command_ws_url %>");
            
            ws_cmd.onopen = function(e){
                let v = [];
                let u = [];
                
                description.file_readers.forEach( function(fr){
                  v.push(fr.result);  
                });
                for(let i = 0; i != description.files.length;++i){
                    let f = description.files.item(i);
                    u.push(f.name);
                }
                            
                ws_cmd.onmessage = function(msg){
                    let m = JSON.parse(msg.data);
                    if (m.ok){
                        ws_cmd.close();
                        $("#task_info_"+task_id).removeClass("alert-warning").addClass("alert-success");
                        $("#tasks_list").html(
                          $("#tasks_list").html()+
                          '<div  class= "alert alert-success alert-dismissable">'+
                          '<strong>The modified simulation is now ready: <a href="/'+description.uri+'">'+description.name+'</a></strong>'+
                          '</div>' 
                        );
                     $("#task_add_behaviour_step_1_"+task_id.toString()).removeClass("std_loader").removeClass("std_loader_stopped")
                                                                                              .html('<span class="glyphicon glyphicon-ok"></span>');
                    } else {
                     ws_cmd.close();
                     $("#task_add_behaviour_step_1_"+task_id.toString()).removeClass("std_loader").removeClass("std_loader_stopped");
                     $("#task_add_behaviour_step_1_"+task_id.toString()).html('<span class="glyphicon glyphicon-remove"></span>');
                     $("#task_info_"+task_id).removeClass("alert-warning").addClass("alert-danger");
                    }
                }
                ws_cmd.send(JSON.stringify({cmd:"add_files",name:description.name, data: v , file_names:u}));
            }
            active_tasks.push({id:task_id,descr:description,ws:ws_cmd});
            return task_id;
        }





        function dialog_add_behaviour_input_complete(){
            let r = dialog_add_behaviour_sim.files != undefined && 
                dialog_add_behaviour_sim.name != undefined && 
                dialog_add_behaviour_sim.name.length && 
                dialog_add_behaviour_sim.files.length ;
            if (r){
                for(let i = 0; i != dialog_add_behaviour_sim.file_status.length;++i){
                 if(dialog_add_behaviour_sim.file_status[i] != FILE_STATUS_OK) return false;
                }
            }
            return r;
        }

        do_action_add_behaviour = function(sim_name,sim_uri){
          $('#action_add_behaviour_dialog_sim_name').val(sim_name);
          dialog_add_behaviour_sim = initial_dialog_create_fibex_based_sim;
          dialog_add_behaviour_sim.name = sim_name;
          dialog_add_behaviour_sim.uri = sim_uri;
          $('#action_add_behaviour_dialog').modal();
        }

        function update_action_add_behaviour_dialog_btn_send(){
            if(dialog_add_behaviour_input_complete()) 
             $("#action_add_behaviour_dialog_btn_send").removeAttr("disabled");
            else if (!$("#action_add_behaviour_dialog_btn_send").attr("disabled")){
             $("#action_add_behaviour_dialog_btn_send").attr("disabled","true");
            }
        }


        function handleFileSelect_add_behaviour(evt) {
            let files = evt.target.files; // FileList object
            console.log(files);
            dialog_add_behaviour_sim.files = files;
            // files is a FileList of File objects. List some properties.
            let output = [];
            dialog_add_behaviour_sim.file_status = [];
            dialog_add_behaviour_sim.file_readers = [];
            
            for (let i = 0, f; f = files[i]; i++) {
                output.push(
                  '<tr><td>', escape(f.name), '</td>', 
                  '<td>', f.type || 'n/a', '</td><td> ',
                  f.size, '</td><td>',
                  f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                  '</td>',
                  '<td>',
                  '<div class="progress">',
                  '<div id="prgrs_add_behaviour_sim_',i.toString(),'" ',
                  'class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">',
                  '<span class="sr-only"></span>',
                  '</div>',
                  '</div>', 
                  '</td>',
                  '</tr>'
                );
          
                dialog_add_behaviour_sim.file_status.push(FILE_STATUS_PROCESSING);
                let fr = new FileReader();
                dialog_add_behaviour_sim.file_readers.push(fr);
                fr.onabort = function(evt){};
                fr.onload = function(evt){
                    dialog_add_behaviour_sim.file_status[i] = FILE_STATUS_OK;
                    $("#prgrs_add_behaviour_sim_"+i.toString()).css("width", "100%").attr("aria-valuenow", "100")
                                             .attr("class","progress-bar progress-bar-success progress-bar-striped");
                    update_action_add_behaviour_dialog_btn_send();
                };
                fr.onerror = function(evt){};
                fr.onprogress = function(evt){};
                fr.readAsText(f);
            }
            $('#action_add_behaviour_dialog_file_picker_list').html(output.join(''));
            update_action_add_behaviour_dialog_btn_send();
        }
        $("#action_add_behaviour_dialog_file_picker").change(handleFileSelect_add_behaviour);
         $("#action_add_behaviour_dialog_btn_send").click(function(evt){
           start_task_add_behaviour(dialog_add_behaviour_sim);
        });

    });
</script>

</body>
</html>