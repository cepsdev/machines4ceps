<% include header %>

 <!-- jQuery -->
<script src="/vendor/jquery/jquery.min.js"></script>
<!-- Bootstrap Core JavaScript -->
<script src="/vendor/bootstrap/js/bootstrap.min.js"></script>

<!-- Metis Menu Plugin JavaScript -->
<script src="/vendor/metisMenu/metisMenu.min.js"></script>

<!-- Metis Menu Plugin JavaScript -->
<script src="/vendor/metisMenu/metisMenu.min.js"></script>

<!-- Flot Charts JavaScript -->
<script src="/vendor/flot/excanvas.min.js"></script>
<script src="/vendor/flot/jquery.flot.js"></script>
<script src="/vendor/flot/jquery.flot.pie.js"></script>
<script src="/vendor/flot/jquery.flot.resize.js"></script>
<script src="/vendor/flot/jquery.flot.time.js"></script>
<script src="/vendor/flot-tooltip/jquery.flot.tooltip.min.js"></script>

<script type="text/javascript">
 var signal = [];
 var signal_name = "";
 var ws_cmd = undefined;

 $(function() {
    var counter = 0;
    var ws = new WebSocket("<%= signal_ws %>");
    ws_cmd = new WebSocket("<%= sim_core.command_url %>");

    ws_cmd.onopen = function(e){
        console.log('Connection to command server opened.');
    }
    
    ws.onopen = function(e){
        console.log('Connection to server opened.');

    }
    ws.onmessage = function(e) {
        var msg = JSON.parse(e.data);
                      
    }

    ws_cmd.onmessage = function(e){
        var msg = JSON.parse(e.data);
  
        if (msg.error != 0){
        } else {
        }
    }
});
</script>

<script>
function Cepscloud() {this.signal_handlers = [];this.current_signal_values=[];}
Cepscloud.prototype.register_handler = function (sig_name,callback) { this.signal_handlers.push({sig:sig_name,clbk:callback});}
Cepscloud.prototype.update = function(sig_list){
    if (this.signal_handlers.length == 0) return;
    if (sig_list == undefined) sig_list = this.current_signal_values;

    for(sig of sig_list){
        for(let i = 0;i!=this.signal_handlers.length;++i)
        {
            if (this.signal_handlers[i].sig != sig.name) continue;
            this.signal_handlers[i].clbk(sig.value);
        }
    }
}
Cepscloud.prototype.set_signal = function (name,value){
    let sig = undefined;
    for(s of this.current_signal_values)
     if (s.name == name) {sig = s;break;}

    if (sig === undefined) { sig = {name:name,value:value};this.current_signal_values.push(sig);}
    sig.value = value;
}

Cepscloud.prototype.get_signal = function (name){
    for(s of this.current_signal_values)
     if (s.name == name) return s.value;
    return undefined;   
}

var cepscloud = new Cepscloud();

</script>    


<body>
    <div id="wrapper">
        <% include navbar %>
        <div id="page-wrapper">
            <div class="row">
                <div class="col-lg-12">
                    <h3></h3>
                </div>
                <!-- /.col-lg-12 -->
            </div>            
            <!-- /.row -->
            <div class="row">
                  <div class="col-lg-8">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                          Control Panel <strong><%= panel_name %></strong>   
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                          <%- include( panel_loc ) %>
                        </div>
                        <!-- /.panel-body -->
                    </div>
                    <!-- /.panel -->
                   </div>

            </div>            
            <!-- /.row -->


        </div>
        <!-- /#page-wrapper -->

    </div>
    <!-- /#wrapper -->

   

 

    <script>
 let bulbs = $("span.bulb");
 for(let i = 0; i!=bulbs.length;++i)
  {
    let elem = $(bulbs[i]);
    elem.addClass("label");
    elem.addClass("label-default");
    let signal = elem.attr("signal");
    if (signal == undefined){
        elem.html(elem.html()+'<div class="alert alert-danger" role="alert">No Signal defined.</div>');
        continue;
    }
    let threshold = elem.attr("threshold");
    if(threshold === undefined) 
     cepscloud.register_handler(signal, 
      (sig) => {
          if (isNaN(sig)) return;
          let off = Math.round(sig) == 0;
          if (off) elem.removeClass("label-warning").removeClass("label-default").addClass("label-default");
          else elem.removeClass("label-warning").removeClass("label-default").addClass("label-warning");
      });
  }

  let left_rights = $("span.left_right");
  for(let i = 0; i!=left_rights.length;++i)
  {
   let elem = $(left_rights[i]);
   let l_onclick = elem.attr("onleft");
   let r_onclick = elem.attr("onright");
   
   elem.html(
    '<div class="btn-group" role="group">'+
      '<button type="button" class="btn btn-default" onclick="'+l_onclick+'"><span class="glyphicon glyphicon-chevron-left"></span>&nbsp;</button>'+
      '<button type="button" class="btn btn-default" onclick="'+r_onclick+'"><span class="glyphicon glyphicon-chevron-right"></span>&nbsp;</button>'+
    '</div>');
  }
</script>

<script>
 /*setInterval(()=>{
  let signal_names = ["CFBP_DigIn096","CFBP_DigIn097","CFBP_DigIn098","CFBP_DigIn099","CFBP_DigIn100","CFBP_DigIn101","CFBP_DigIn102","CFBP_DigIn103"];
  let sigs = [];
  for (let n of signal_names){
      sigs.push({name:n,value:Math.random()>0.5?1.0:0.0});
  }
  cepscloud.update(sigs);
 },50);*/   

 setInterval(()=>{
  cepscloud.update();
 },50);

</script>
    <!-- Custom Theme JavaScript -->
    <script src="/dist/js/sb-admin-2.js"></script>

</body>

</html>
