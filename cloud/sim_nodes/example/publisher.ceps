frame{
 id{publisher_comm_layer_frames_reply;};
 data{
 "[";
  static_for(e : root.frame) {
   "{";
    "\"name\":";"\"";text(e.id.content());"\"";
    ",";
    "\"signals\":";
    "[";
    static_for(ee : e.data.fetch_recursively_symbols().is_kind("Systemstate").to_text().sort().unique()){
     "{"; "\"name\":"; "\"";ee;"\""; "}"; if(!last)",";
    }
    "]";
   "}"; if(!last)",";
  }
  "]";
 };
};


frame{
 id{publisher_internal_frm;};
 data{ };
};

//Signal Logger

Systemstate publisher_internal_logged_state_name;
Systemstate publisher_internal_dummy;
publisher_internal_dummy = 0.0;
publisher_internal_logged_state_name = "publisher_internal_dummy";

frame{
 id{publisher_internal_frm_signal_logging;};
 data{
 "{";
 "\"name\":";"\"";publisher_internal_logged_state_name;"\",";
 "\"signal\":";as_string(value_of_systemstate(publisher_internal_logged_state_name));
 "}";
 };
};

Event pub_signal_logger_request;

receiver
{
 id { publisher_signal_logger_in; };
 when { publisher_internal_frm; };
 emit { pub_signal_logger_request; };
 transport
 {
  websocket_server;
  generic_tcp_in
  {
   port { "8182"; };
   ip { "127.0.0.1"; };
  };
 };
};

sender
{
 id{publisher_signal_logger_out;};
 transport {use { publisher_signal_logger_in; };};
};

Event signal_logger_dump;

Systemstate some_random_number_low;
some_random_number_low = 0;

Systemstate a;
a = 1;

statemachine{
 publisher_signal_logger;
 cover{edges_upto_1;};
 states{Initial;Logging;Error;};
 Actions{
  starttimer{
   start_periodic_timer(0.1*s,signal_logger_dump,signal_logger_dump_timer);
  };
  dump{
   send(publisher_internal_frm_signal_logging,publisher_signal_logger_out);

   eval_fragment("a=a+1;");
   print(some_random_number_low,"\n");
  };
 };
 t{Initial;Logging;starttimer;};
 t{Logging;Logging;signal_logger_dump;dump;};
};

statemachine{
 publisher_signal_logger_ctrl;
 cover{edges_upto_1;};
 states{Initial;};
 Actions{
  msg_arrived{
   print("Received data: ", argv(1),"\n");
   publisher_internal_logged_state_name = argv(1);
  };
 };
 t{Initial;Initial;pub_signal_logger_request;msg_arrived;};
};



Event pub_request;



frame{
 id{publisher_sim_name_reply;};
 data{
  text(root.package.name.content());
 };
};

frame{
 id{publisher_sim_uri_reply;};
 data{
  text(root.package.uri.content());
 };
};

receiver
{
 id { publisher_in; };
 when { publisher_internal_frm; };
 emit { pub_request; };
 transport
 {
  websocket_server;
  generic_tcp_in
  {
   port { "8181"; };
   ip { "127.0.0.1"; };
  };
 };
};

sender
{
 id{publisher_out;};
 transport {use { publisher_in; };};
};

statemachine{
 publisher_dispatcher;
 cover{edges_upto_1;};
 states{Initial;};
 Actions{
  msg_arrived{
   print("Received data: ", argv(1),"\n");
   if (argv(1) == "sim_name"){
    send(publisher_sim_name_reply,publisher_out);
   } else if (argv(1) == "comm_layer_frames"){
    send(publisher_comm_layer_frames_reply,publisher_out);
   } else if (argv(1) == "sim_uri"){
    send(publisher_sim_uri_reply,publisher_out);
   }
  };
 };
 t{Initial;Initial;pub_request;msg_arrived;};
};


