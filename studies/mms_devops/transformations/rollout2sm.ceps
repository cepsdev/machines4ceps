kind Event;
Event success;
Event start_rollout;

static_for(e:root.rollout){
 static_for(market:e.markets.market){
  sm{
   val market_name = text(market.content().id.content()); 
   as_identifier(market_name);

   states { Initial;
            Done;
            Final;
            Killed;
            e.steps.content().is_id();
            static_for(step : e.steps.content().is_id()){as_identifier(text(step)+"_error");as_identifier(text(step)+"_critical");};
            categories{
              static_for(step : e.steps.content().is_id()){as_symbol(text(step)+"_critical","WarnState");};
              static_for(step : e.steps.content().is_id()){as_symbol(text(step)+"_error","FailState");};
              as_symbol("Killed","FailState");              
            };
            dont_cover{
              Killed;static_for(step : e.steps.content().is_id()){as_identifier(text(step)+"_error");as_identifier(text(step)+"_critical");};              
            };
          };

   cover{edges_upto_1;dont_cover_loops;};
   
    t {  
      Initial; 
      e.steps.content().is_id().first();
      as_symbol("start_rollout_"+market_name,"Event");        
    };

    t{
      Initial;
      Killed;
      as_symbol("dump_rollout_"+market_name,"Event");
    };

   val prev = e.steps.content().is_id().first();

   static_for( step:tail(e.steps.content().is_id()) ) {
    t {
      prev;
      as_identifier(text(prev)+"_error");
      as_symbol(market_name+text(prev)+"_failed","Event");
    };

    t {
      prev;
      as_identifier(text(prev)+"_critical");
      as_symbol(market_name+text(prev)+"_critical","Event");
    };
    t {
      prev;
      prev;
      as_symbol(market_name+text(prev)+"_critical","Event");
    };

    t {
      as_identifier(text(prev)+"_critical");
      as_identifier(text(prev)+"_error");
      as_symbol(market_name+text(prev)+"_failed","Event");
    };
    t {
      as_identifier(text(prev)+"_critical");
      step;
      as_symbol(market_name+text(prev)+"_finished","Event");
    };

    t { prev;
        step;
        as_symbol(market_name+text(prev)+"_finished","Event");
    };
    
    ignore_value { prev = step; };
   };

   t {
      prev;
      prev;
      as_symbol(market_name+text(prev)+"_critical","Event");
   };

   t {
      prev;
      as_identifier(text(prev)+"_critical");
      as_symbol(market_name+text(prev)+"_critical","Event");
    };
   t {
      as_identifier(text(prev)+"_critical");
      as_identifier(text(prev)+"_error");
      as_symbol(market_name+text(prev)+"_failed","Event");
    };
   t {
      prev;
      as_identifier(text(prev)+"_error");
      as_symbol(market_name+text(prev)+"_failed","Event");
    };
   t {
      as_identifier(text(prev)+"_critical");
      Done;
      as_symbol(market_name+text(prev)+"_finished","Event");
     };
   t { prev;Done;as_symbol(market_name+text(prev)+"_finished","Event"); };
   t{Done;Final;};
 };
 }
}
