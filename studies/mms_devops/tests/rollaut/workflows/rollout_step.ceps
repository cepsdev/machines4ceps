kind Event;
kind Guard;
kind Systemstate;
kind IOManip;IOManip endl;

Event big_step,small_step,step_failure,trigger_status_check,job_not_done_yet,job_finished,result_ok,result_nok;
Event job_finished_successfully_event,job_failed_event,job_queued;

paramsx{
    comment{
     "Jenkins Parameters";
    };
    param{
     name{"sapcode";};value{3333;};
    };
    param{
     name{"ROLLOUTNAME";};value{"Gargamel42";};
    };
   };
   
macro sub_step_check{    
 sm{
    val sm_name = hd(arglist);
    val jenkins_job = hd(tail(arglist));
    val arguments = hd(tail(tail(arglist)));
    val step_id = hd(tail(tail(tail(arglist))));
    val job_code = hd(tail(tail(tail(tail(arglist)))));

    sm_name;
    
    states{Initial;
           TrackJob;};

    Actions{
     do_track{
      kind Parameter;
      Parameter hostname;
      Parameter passwd;
      Parameter user;
      Parameter time_stamp;
      Parameter database;
      Parameter job_name;
      Parameter sap_code;
      Parameter time_delta;
      Parameter check_for_empty_resultset_only;
      Parameter on_error;
      Parameter on_success;
      mms_rollaut_db_check(
        hostname   = env("ROLLAUT_DB_HOST"),
        user       = env("ROLLAUT_DB_USER"),
        passwd     = env("ROLLAUT_DB_PASSWD"),
        database   = env("ROLLAUT_DB_DB"),
        sap_code   = job_code,
        job_name   = jenkins_job,
        time_stamp  = timestamp(),
        on_error   = as_symbol("small_step_"+step_id,"Event"),
        on_success = as_symbol("big_step_"+step_id,"Event")
      );
     };
    };

    on_enter {
      kind Parameter;
      Parameter on_job_queued,option,command,url,parameters,
                hostname,port,job_name,authorization,on_success,on_error;
      jenkins(
              command                      = "build",
              //option                     = "follow",
              authorization                = env("ROLLAUT_JENKINS_AUTH"),
              url                          = env("ROLLAUT_JENKINS_URL"),
              job_name                     = jenkins_job,
              parameters                   = arguments,
              //on_success                 = job_finished_successfully_event,
              on_error                     = as_symbol("ev_step_"+step_id+"_failed","Event"),
              on_success/*on_job_queued*/  = as_symbol("ev_check_"+step_id+"_start_tracking","Event")
      );
    };//on_enter

    t{Initial;TrackJob;as_symbol("ev_check_"+step_id+"_start_tracking","Event");do_track;};

  };//sm
};//macro


macro sub_step_run{    
       sm{
            hd(arglist);
        };
    
};
