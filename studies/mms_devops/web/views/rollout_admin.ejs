<!DOCTYPE html>
<html lang=en>
<!-- 
    
    Cool effects

    https://blog.trackduck.com/2015/06/10/15-impressive-pop-animation-effects-codepen/
    
    
    -->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="author" content="(c) ceps technologies, all rights reserved">
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="jquery-ui/jquery-ui.min.css" rel="stylesheet">
    <link href="font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <!-- link href="datatables/css/dataTables.material.min.css" rel="stylesheet" -->
    <!-- link href="datatables/css/jquery.dataTables.min.css" rel="stylesheet" -->
    <link href="datatables/css/dataTables.bootstrap.min.css" rel="stylesheet" >
    <link href="datatables-responsive/dataTables.responsive.css" rel="stylesheet">
    <link href="cepscloud-ui/cepscloud-ui.css" rel="stylesheet">
    <link href="animate/animate.css" rel="stylesheet">
    <!--link href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"-->
<style>
    @font-face {
   font-family: 'Material Icons';
   font-style: normal;
   font-weight: 400;
   src: url(iconfont/MaterialIcons-Regular.eot); /* For IE6-8 */
   src: local('Material Icons'),
        local('MaterialIcons-Regular'),
        url(iconfont/MaterialIcons-Regular.woff2) format('woff2'),
        url(iconfont/MaterialIcons-Regular.woff) format('woff'),
        url(iconfont/MaterialIcons-Regular.ttf) format('truetype');
}

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;  /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: 'liga';
}

</style>



    <style>
        /* Rules for sizing the icon. */
.material-icons.md-18 { font-size: 18px; }
.material-icons.md-24 { font-size: 24px; }
.material-icons.md-36 { font-size: 36px; }
.material-icons.md-48 { font-size: 48px; }

/* Rules for using icons as black on a light background. */
.material-icons.md-dark { color: rgba(0, 0, 0, 0.54); }
.material-icons.md-dark.md-inactive { color: rgba(0, 0, 0, 0.26); }

/* Rules for using icons as white on a dark background. */
.material-icons.md-light { color: rgba(255, 255, 255, 1); }
.material-icons.md-light.md-inactive { color: rgba(255, 255, 255, 0.3); }

.material-icons.md-18 { font-size: 18px; }
.material-icons.md-24 { font-size: 24px; }
.material-icons.md-36 { font-size: 36px; }
.material-icons.md-48 { font-size: 48px; }
.material-icons.md-dark { color: rgba(0, 0, 0, 0.54); }
.material-icons.md-dark.md-inactive { color: rgba(0, 0, 0, 0.26); }

.material-icons.md-light { color: rgba(255, 255, 255, 1); }
.material-icons.md-light.md-inactive { color: rgba(255, 255, 255, 0.3); }
.material-icons.orange600 { color: #FB8C00; }
    </style>
    <title>MediaMarktSaturn - Rollouts</title>
</head>

<style>
 .ceps-ui-minimized:hover{
    
 }
 
 .ceps-ui-minimized-inactive{
    
    
 }
 .ceps-ui-minimized-active{
    
    
 }
 .ceps-ui-minimized-warning{
    
   
 }
 .ceps-ui-minimized-failure{
    
   
 }
 .ceps-ui-minimized-done{
    
    
 }


 @keyframes show-details-anim{
     from {transform:rotate(0deg)}
     to {transform:rotate(-180deg)}
 }


 @keyframes hide-details-anim{
     from {transform:rotate(-180deg)}
     to {transform:rotate(0deg)}
 }

.sm-details-info{
    font-weight: bold;
    border-radius: 25px;
    border: 2px solid rgb(115, 173, 221);
}



</style>

<script>
    var global_observer_handlers = [];
    let SM_STATUS_INACTIVE = 0;
    let SM_STATUS_ACTIVE = 1;
    let SM_STATUS_WARNING = 2;
    let SM_STATUS_FAILURE = 3;
    let SM_STATUS_DONE = 4;
    

    function register_observer(name, fn) {
        for (let e of global_observer_handlers)
            if (e.name == name) { e.handler = fn; return; }
        if (fn == undefined) return;
        for (let e of global_observer_handlers)
            if (e.handler == undefined) { e.name = name; e.handler = fn; return; }

        global_observer_handlers.push({name:name, handler:fn});
    }

    function set_css_class_for_sm_viz(elem,status,minimized){
        if(minimized){
            $(elem).removeClass("ceps-ui-minimized-inactive")
                   .removeClass("ceps-ui-minimized-active")
                   .removeClass("ceps-ui-minimized-warning")
                   .removeClass("ceps-ui-minimized-failure")
                   .removeClass("ceps-ui-minimized-done");
            if (status == SM_STATUS_INACTIVE) $(elem).addClass("ceps-ui-minimized-inactive");
            else if (status == SM_STATUS_ACTIVE) $(elem).addClass("ceps-ui-minimized-active");
            else if (status == SM_STATUS_WARNING) $(elem).addClass("ceps-ui-minimized-warning");
            else if (status == SM_STATUS_FAILURE) $(elem).addClass("ceps-ui-minimized-failure");
            else if (status == SM_STATUS_DONE) $(elem).addClass("ceps-ui-minimized-done");
        }        
    }

    function unregister_observer(name) { register_observer(name, undefined); }

    function set_page_title(s) {
        $("#page_title").html(s);
    }

    function warn(s) {
        $.notify({/* options*/message: s
        },
            {/*settings*/ delay: 10000, type: 'warning', showProgressbar: false,
                animate: { enter: 'animated zoomInDown', exit: 'animated zoomOutUp' }
            }
        );        
    }

    function limit_to_n_characters(s, n) {
        if (s.length < n) return s;
        return s.substr(0, n) + "...";
    }
</script>


<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="#" >MediaMarktSaturn<sup>Roll<sub><span class="text-primary" style="font-size:16px;">A</span></sub>ut</sup></a>
        <h3 style="color:white;vertical-align:center;">Rollout Overview</h3>
        <div class="collapse navbar-collapse">
            <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                <!---li class="nav-item"><button id="btn_start" class="btn btn-outline-success">Start</button></li>
                <li class="nav-item">&nbsp;&nbsp;&nbsp;</li>
                
                <li class="nav-item"><button id="btn_stop" class="btn btn-outline-success">Stop</button></li-->
            </ul>
            <span class="badge badge-info xs">v201809110530</span>&nbsp;&nbsp;
            <span class="badge badge-danger" id="nav_info_connection">Not Connected</span>
        </div>
    </nav>
    <div class="row">
        <div class="col-xs-6 col-sm-12">
            <h2><span id="page_title"></span></h2>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-2 col-sm-2">


            
        </div>
        <div class="col-xs-6 col-sm-8" >
                        <div class="form-group" style="padding-left: 4px;padding-right: 4px;">
                            <label for="search_statemachines"></label>
                            <input type="text" 
                                   class="form-control" 
                                   id="input_search_statemachines" 
                                   aria-describedby="search_statemachinesHelp" placeholder="Search">
                            <small id="search_statemachinesHelp" class="form-text text-muted"></small>
                          </div>
        </div>
        <div class="col-xs-2 col-sm-2"></div>        
    </div>

        <div class="row">
                
                <div class="col-xs-2 col-sm-2">
                        <div class="card border-light mb-3" style="margin-left:10px;">
                        <div class="card-body">
                        <h5 class="card-title mb-2 text-muted">Active Rollouts</h5>
                        <ul class="list-group">
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                  <!--Cras justo odio
                                  <span class="badge badge-danger badge-pill">14</span>
                                  <span class="badge badge-primary badge-pill">14</span>
                                  <span class="badge badge-primary badge-pill">14</span> -->
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                 <!--  Dapibus ac facilisis in hjgg dhdj JGJ
                                  <span class="badge badge-primary badge-pill">2</span> -->
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                  <!--Morbi leo risus
                                  <span class="badge badge-primary badge-pill">1</span>-->
                                </li>
                              </ul> 
                </div></div></div>
                <div class="col-xs-2 col-sm-8">                 
                       
                        <div id="rollouts_view" ></div>
               
                </div>
            
               
                <div class="col-xs-2 col-sm-2">
                </div>

            </div>
            <hr/>
        

    <!---------------------------- COMPONENT: Login ---------------------------->
    <div class="modal fade" id="dlg_login" tabindex="-1" role="dialog" aria-labelledby="dlg_login" style="z-index: 10000;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="dlg_select_a_signal_label">Connect</h4>
                </div>
                <div id="dlg_select_a_signal_body" class="modal-body">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-log-in"></i></span>
                        <!--input id="sim_url" type="text" class="form-control" name="user" value="tomas-cepsdev-win:10163" placeholder=""-->
                        <input id="sim_url" type="text" class="form-control" name="user" value="localhost:1063" placeholder="">
                    </div>                      
                </div>
                <div class="modal-footer">
                    <button id="dlg_select_a_signal_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button id="dlg_select_a_signal_btn_ok" type="button" class="btn btn-primary" onclick="login($('#sim_url').val());">Ok</button>
                </div>
            </div>
        </div>
    </div>
    <!---------------------------- COMPONENT: Login ---------------------------->

    <!---------------------------- COMPONENT: state machine view ---------------------------->
    <div class="modal fade" 
         id="dlg_state_machine_details" 
         tabindex="-1" 
         role="dialog" 
         aria-labelledby="dlg_state_machine_label" 
         style="z-index: 10000;">

        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="dlg_state_machine_details_label"></h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div id="dlg_state_machine_details_body" class="modal-body" 
                     style="max-height:700px;overflow:auto;">
                    <div id="dlg_state_machine_details_svg"></div> 
                </div>
                <div class="modal-footer">
                    <!--button id="dlg_select_a_signal_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button-->
                </div>
            </div>
        </div>
    </div>
    <!---------------------------- COMPONENT: Choose Signal ---------------------------->


    <!---------------------------- COMPONENT: Choose Event ---------------------------->
        <div class="modal fade" id="dlg_select_an_event" tabindex="-1" role="dialog" aria-labelledby="dlg_select_an_event_label" style="z-index: 10000;">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="dlg_select_an_event_label">Choose an Event</h4>
                    </div>
                    <div id="dlg_select_an_event_body" class="modal-body">
                        <table id="dlg_select_an_event_table" class="table table-striped table-bordered" width="100%"></table>
                    </div>
                    <div class="modal-footer">
                        <button id="dlg_select_an_event_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    <!---------------------------- COMPONENT: Choose Event ---------------------------->


    <!---------------------------- COMPONENT: Choose Simulation ---------------------------->
    <div class="modal fade" id="dlg_select_a_simulation" tabindex="-1" role="dialog" aria-labelledby="dlg_select_a_simulation_label" style="z-index: 10000;">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="dlg_select_a_simulation_label">Choose a Simulation</h4>
                </div>
                <div id="dlg_select_a_signal_body" class="modal-body">
                    <table id="dlg_select_a_simulation_table" class="table table-striped table-bordered" width="100%"></table>
                </div>
                <div class="modal-footer">
                    <button id="dlg_select_a_signal_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!---------------------------- COMPONENT: Choose Simulation ---------------------------->


    <!---------------------------- COMPONENT: Choose Control Panel ---------------------------->
    <div class="modal fade" id="dlg_select_a_ctrlpanel" tabindex="-1" role="dialog" aria-labelledby="dlg_select_a_ctrlpanel_label" style="z-index: 10000;">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="dlg_select_a_ctrlpanel_label">Choose a Control Panel</h4>
                </div>
                <div id="dlg_select_a_ctrlpanel_body" class="modal-body">
                    <table id="dlg_select_a_ctrlpanel_table" class="table table-striped table-bordered" width="100%"></table>
                </div>
                <div class="modal-footer">
                    <button id="dlg_select_a_ctrlpanel_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                 </div>
            </div>
        </div>
    </div>
    <!---------------------------- COMPONENT: Choose Control Panel ---------------------------->
       
    <!---------------------------- COMPONENT: Save Control Panel ---------------------------->
        <div class="modal fade" id="dlg_save_control_panel" tabindex="-1" role="dialog" aria-labelledby="dlg_save_control_panel" style="z-index: 10000;">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="dlg_save_control_panel_label">Save Control Panel</h4>
                    </div>
                    <div id="dlg_save_control_panel_body" class="modal-body">
                        <div class="form-group">
                            <label for="save_control_panel_name">Name</label>
                            <!--input id="sim_url" type="text" class="form-control" name="user" value="tomas-cepsdev-win:10163" placeholder=""-->
                            <input id="save_control_panel_name" type="text" class="form-control" name="save_control_panel_name" value="" placeholder="">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="dlg_select_a_signal_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button id="dlg_select_a_signal_btn_ok" type="button" class="btn btn-primary" onclick="$('#dlg_save_control_panel').modal('hide');save_active_control_panel($('#save_control_panel_name').val());">Ok</button>
                    </div>
                </div>
            </div>
        </div>
     <!---------------------------- COMPONENT: Save Control Panel ---------------------------->

    
    
    
    
    
    
     
    <!-- -------------------------- COMPONENT: market urls -------------------------- -->
    <div class="modal fade" 
    id="dlg_market_urls" 
    tabindex="-1" 
    role="dialog" 
    aria-labelledby="dlg_market_urls_label" 
    style="z-index: 10000;">

   <div class="modal-dialog modal-lg" role="document">
       <div class="modal-content">
           <div class="modal-header">
               <h4 class="modal-title" id="dlg_market_urls_details_label">Status URLs of individual markets</h4>
               <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
           </div>
           <div id="dlg_market_urls_body" class="modal-body" 
                style="max-height:700px;overflow:auto;">
               <div id="dlg_market_urls_details"></div> 
           </div>
           <div class="modal-footer">
               <!--button id="dlg_select_a_signal_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button-->
           </div>
        </div>
        </div>
    </div>

   <!-- -------------------------- COMPONENT: edit rollouts -------------------------- -->
   <div class="modal fade" 
   id="dlg_edit_rollout" 
   tabindex="-1" 
   role="dialog" 
   aria-labelledby="dlg_edit_rollout_label" 
   style="z-index: 10000;">

  <div class="modal-dialog modal-lg" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <h4 class="modal-title" id="dlg_edit_rollouts_label"><span id="dlg_edit_rollouts_label_value"></span></h4>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          </div>
          <div id="dlg_edit_rollouts_body" class="modal-body" 
               style="max-height:700px;overflow:auto;">
              <div class="card" id="dlg_edit_rollouts_details">

                <ul class="nav nav-tabs">
                    <li class="nav-item">
                      <a class="nav-link active" data-toggle="tab" href="#dlg_edit_rollouts_tab_oveview">Overview</a>
                    </li>
                    <li class="nav-item">
                      <a class="nav-link" data-toggle="tab" href="#dlg_edit_rollouts_tab_steps">Steps</a>
                    </li>
                    <li class="nav-item">
                      <a class="nav-link" data-toggle="tab" href="#dlg_edit_rollouts_tab_markets">Markets</a>
                    </li>
                  </ul>
                  
                  <!-- Tab panes -->
                  <div class="tab-content">
                    <div class="tab-pane container active" id="dlg_edit_rollouts_tab_oveview">A</div>
                    <div class="tab-pane container fade" id="dlg_edit_rollouts_tab_steps">B</div>
                    <div class="tab-pane container fade" id="dlg_edit_rollouts_tab_markets">C</div>
                  </div>

              </div> 
          </div>
          <div class="modal-footer">
              <!--button id="dlg_select_a_signal_btn_close" type="button" class="btn btn-default" data-dismiss="modal">Close</button-->
          </div>
       </div>
       </div>
   </div>

    <script src="jquery/js/jquery.min.js"></script>
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script src="jquery-ui/jquery-ui.min.js"></script>
    <script src="datatables/js/jquery.dataTables.min.js"></script>
    <script src="datatables-plugins/dataTables.bootstrap.min.js"></script>
    <script src="datatables-responsive/dataTables.responsive.js"></script>
    <script src="chartjs/Chart.js"></script>
    <script src="bootstrap-notify/bootstrap-notify.js"></script>
    <script src="d3/d3.js"></script>

    <script>
        function traverse_ceps_as_json(doc, f) {
            if (doc === undefined) return true;
            if (Object.prototype.toString.call(doc) == "[object Array]") {
                for (let e of doc) {
                    if (!f(e)) return false;
                    if(!traverse_ceps_as_json(e, f)) return false;
                }
                return true;
            } else if (doc.content) {
                return(traverse_ceps_as_json(doc.content, f));
            }
            return f(doc);
        }

    </script>

    <script>
        var connected = false;
        var cmd_channel_established = false;
        var new_remote_site  = false;
        var remote_url = undefined;
        var simcore_ws = undefined;
        var global_sysstates = [];
        var command_socket = undefined;
        let rollouts_global = undefined;
        let rollouts_view = undefined;
        const ROLLOUT_READY = 0;
        const ROLLOUT_STARTED_PENDING = 1;
        const ROLLOUT_STARTED = 2;
        const ROLLOUT_STOP_PENDING = 3;
        const ROLLOUT_FAILED = 4;
        const ROLLOUT_DONE = 5;
        let gen_html_for_rollout_id_counter = 0;


        function normalize_rollout(rollout_raw){
            let r = {};
            r.steps = [];
            r.markets = [];
            for (let i = 0; i < rollout_raw.steps.length;i+=2){
                r.steps.push(normalize_step(rollout_raw.steps[i],rollout_raw.steps[i+1]));
            }
            for (let i = 0; i < rollout_raw.markets.length;i+=2){
                r.markets.push(normalize_market(rollout_raw.markets[i],rollout_raw.markets[i+1]));
            }
            return r;

            function normalize_market(name,details){
                let r = {name:name.name, details : {}};
                details = details.name.content;
                for(let i = 0; i != details.length;++i)
                 if (details[i].name == "code"){
                  r.details.code = details[i].content[0];
                 }
                return r;
            }

            function normalize_step(name,details){
                let r = {name:name.name, details : {}, criticality_conditions:{warn:"",error:""}};
                details = details.name.content;
                for(let i = 0;i != details.length;++i){
                    let e = details[i];
                    if (e.name == "job_check")
                     r.details.job_check = e.content[0];
                    else if (e.name == "job_run")
                     r.details.job_run = e.content[0];
                    else if (e.name == "job_check_warn")
                     r.details.job_check_warn = e.content[0];
                    else if (e.name == "job_run_warn")
                     r.details.job_run_warn = e.content[0];
                    else if (e.name == "job_run_error")
                     r.details.job_run_error = e.content[0];
                }
                return r;
            }
        }

        let current_edit_rollout = undefined;
        let current_step_edit_box = undefined;

        function edit_steps_done(pos,field){
            let v = $(`#current_step_edit_box`).val();
            console.log(v,pos,field);
            if (field != "crit_def_warn" && field != "crit_def_error" && field != "name")
             current_edit_rollout.steps[pos].details[field] = v;
            else if (field == "name") current_edit_rollout.steps[pos].name = v;
            current_step_edit_box.html(v);
            current_step_edit_box = undefined;
        }

        function start_edit(ev,tab_id,row,col){
            //console.log($(ev.target).html(),pos,field);
            let data = edit_context[tab_id].data;
            edit_context[tab_id].row = row;
            edit_context[tab_id].col = col;
            edit_context[tab_id].edit_box = $(ev.target);
            let v = data.elem(row,col).value;
            let content = `
            <div class="input-group">
                <input id="current_edit_box_${tab_id}_${row}_${col}" type="text" class="form-control" 
                       value="${v}"
                       onfocusout="stop_edit('${tab_id}')"
                       >
            </div>
            `;
            edit_context[tab_id].edit_box.html(content);
            setTimeout(() => {$(`#current_edit_box_${tab_id}_${row}_${col}`).focus();},0);
        }

        function edit_steps_remove_step(pos){
            current_edit_rollout.steps.splice(pos,1);
            build_tab(  current_edit_rollout,
                        `#dlg_edit_rollouts_tab_steps`,
                        data_from_rollout_steps(current_edit_rollout)
            );
        }

        let edit_context = {

        };
        
        function build_tab(rollout,tab_id,data){
            let tbl_body = "";
            let tab = $("#"+tab_id);
            edit_context[tab_id] = {data:data};

            if (data.size() /*rollout.steps.length*/ == 0){
                tbl_body += 
                `
                     <tr>
                     <td>
                        <a  class="btn btn-outline-primary btn-sm" onclick="edit_steps_add_step(${0})" id="" >
                          <i class="fa fa-plus"></i>
                        </a>
                      </td>
                      <td></td>
                      <td></td>
                      <td></td>
                      <td></td>
                      <td></td>
                      <td></td>
                      <td></td>
                      <td></td>
                    </tr> `;                    
            }
            for(let i = 0 ; i != /*rollout.steps.length*/data.size();++i){
                //let step = rollout.steps[i];
                let inner = ""
                for(let j = 0; j != data.cols();++j){
                    inner += `
                    <td onclick="start_edit(event,'${tab_id}',${i},${j})" >${data.elem(i,j).value}</td> 
                    `;
                }

                tbl_body += 
                `
                     <tr>
                     <td>
                        <a  class="btn btn-outline-primary btn-sm" onclick="edit_steps_add_step(${i})" id="" >
                          <i class="fa fa-plus"></i>
                        </a>
                        <a  class="btn btn-outline-primary btn-sm" onclick="edit_steps_remove_step(${i})" id="" >
                          <i class="fa fa-minus"></i>
                        </a>
                      </td>
                      ${inner}
                    </tr> `;                    
                }
                inner = "";
                for(let j = 0; j != data.cols();++j){
                    inner += `
                    <th>${data.elem(-1,j).title}</td> 
                    `;
                }

                let content = 
                `
                <p></p>
                <div style="width: 750px;height:500px; overflow-y: scroll;overflow-x: scroll;">
                <table style="table-layout:fixed;overflow:hidden; width:1200px;padding:4px;">
                <thead>
                 <tr>
                  <th><emph>Action</emph></th>
                  ${inner}
                 </tr>
                </thead>
                <tbody>${tbl_body}</tbody>
                </table>
                </div>
                `;
            $(tab).html(content);
        }

        function data_from_rollout_steps(rollout)
        {
            return {
                size : function(){
                    return rollout.steps.length;
                },
                cols : function (){return 8;},
                elem : function(i,j){
                    if (j == 0) return {title:"Name",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].name : undefined};
                    else if (j == 1) return {title:"Check",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].details.job_check : undefined};
                    else if (j == 2) return {title:"Run",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].details.job_run : undefined};
                    else if (j == 3) return {title:"Check (Warn)",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].details.job_check_warn : undefined};
                    else if (j == 4) return {title:"Run (Warn)",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].details.job_run_warn : undefined};
                    else if (j == 5) return {title:"Run (Error)",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].details.job_run_error : undefined};
                    else if (j == 6) return {title:"Crit. Cond. Warn",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].criticality_conditions.warn : undefined};
                    else if (j == 7) return {title:"Crit. Cond. Error",value: i < rollout.steps.length && i >= 0 ? rollout.steps[i].criticality_conditions.error : undefined};
                    return undefined;
                }
            }
        }

        function action_edit_rollout(rollout_id){
            let rollout = find_rollout_by_id(rollout_id);
            if (rollout == undefined) return;
            $('#dlg_edit_rollout').modal('show');
            $('#dlg_edit_rollouts_label_value').html(`<small>${rollout.name}</small>`);
            //console.log(rollout);
            current_edit_rollout = rollout = normalize_rollout(rollout);
            console.log(rollout);
            build_tab(  rollout,
                        `dlg_edit_rollouts_tab_steps`,
                        data_from_rollout_steps(rollout)
            );
            //build_markets_tab(rollout);
        }

        function dlg_open_market_urls(rollout_id){
            let rollout = find_rollout_by_id(rollout_id);
            console.log(rollout_id,rollout);
            if (rollout == undefined) return;
            $("#dlg_market_urls").modal("show");
            let tbody = ``;
            for(let i = 0; i != rollout.markets.length;++i){
                let e = rollout.markets[i];
                let name = "";
                if (e.name != undefined && e.name.type == undefined){
                    name = e.name;
                } else continue;
                tbody += `
                <tr>
                <td><a href="${rollout.url}&market=${encodeURI(name)}">${name}</a></td>
                <td style="width:75%;">http//${location.host}${rollout.url}&market=${encodeURI(name)}</td>
                <td>${rollout.markets[i+1].name.content[1].content[0]}</td>
                </tr>
                `
            }

            

            let table = `  
            
            <table class="table">
  <caption><a href="${rollout.url}&plain_text_list_of_markets=1"> List of Markets (Plain Text)</a></caption>
  <thead>
    <tr>
      <th scope="col">Name</th>
      <th scope="col">URL</th>
      <th scope="col">SAP Code</th>
    </tr>
  </thead>
  <tbody>
    ${tbody}
  </tbody>
</table>            
            
            `;
            $("#dlg_market_urls_details").html(table);

        }

        function gen_html_time_section(rollout){
            let d = new Date(rollout.when);
            let t = 0;
            let time_left_milli_secs = d - Date.now();
            if (time_left_milli_secs < 0) return "&#x221e;";
            let time_left_days = Math.floor(time_left_milli_secs / (3600 * 24 * 1000));
            let time_left_hours = Math.floor((time_left_milli_secs-time_left_days*(3600 * 24 * 1000)) / (3600*1000) );
            let time_left_minutes = Math.floor( (time_left_milli_secs - time_left_hours*(3600 *1000)  - time_left_days*(3600 * 24 * 1000)) / (1000*60) );
            let time_left_seconds = Math.floor( (time_left_milli_secs % (1000*60)) / 1000 );

            let content = `
                ${ (time_left_days>0?"<emph>"+ time_left_days+"</emph> <b>day"+(time_left_days>1?"s":"")+"</b>":"")}
                ${ ( (time_left_days!=0 || time_left_hours != 0) ?"<emph>"+ time_left_hours+"</emph> <b>hour"+(time_left_hours>1?"s":"")+"</b>":"")}
                ${ "<emph>"+ time_left_minutes+"</emph> <b>minute"+(time_left_minutes>1?"s":"")+"</b>"}
                ${ "<emph>"+ time_left_seconds+"</emph> <b>second"+(time_left_seconds>1?"s":"")+"</b>"}
            `;
            return content;
        }

        function gen_html_remaining_time_section(rollout){
            if (rollout.coverage <= 0.0001) return "&#x221e;"; 
            let remaining = 0;
            let d = new Date(rollout.up_since);
            let t = 0;
            let time_left_milli_secs = Date.now()-d;
            let ms_per_work = 0;
            if (rollout.coverage < 1.0)  {
              ms_per_work = time_left_milli_secs / rollout.coverage;
              remaining = (1.0 - rollout.coverage) * ms_per_work;
            } else remaining = 0;
            let time_left_days = Math.floor(remaining / (3600 * 24 * 1000));
            let time_left_hours = Math.floor((remaining-time_left_days*(3600 * 24 * 1000)) / (3600*1000) );
            let time_left_minutes = Math.floor( (remaining - time_left_hours*(3600 *1000)  - time_left_days*(3600 * 24 * 1000)) / (1000*60) );
            let time_left_seconds = Math.floor( (remaining % (1000*60)) / 1000 );

            let content = `
                ${ (time_left_days>0?"<emph>"+ time_left_days+"</emph> <b>day"+(time_left_days>1?"s":"")+"</b>":"")}
                ${ ( (time_left_days!=0 || time_left_hours != 0) ?"<emph>"+ time_left_hours+"</emph> <b>hour"+(time_left_hours>1?"s":"")+"</b>":"")}
                ${ "<emph>"+ time_left_minutes+"</emph> <b>minute"+(time_left_minutes>1?"s":"")+"</b>"}
                ${ "<emph>"+ time_left_seconds+"</emph> <b>second"+(time_left_seconds>1?"s":"")+"</b>"}
            `;
            return content;
        }

        function gen_html_uptime_section(rollout){
            let d = new Date(rollout.up_since);
            let t = 0;
            let time_left_milli_secs = Date.now()-d;
            let time_left_days = Math.floor(time_left_milli_secs / (3600 * 24 * 1000));
            let time_left_hours = Math.floor((time_left_milli_secs-time_left_days*(3600 * 24 * 1000)) / (3600*1000) );
            let time_left_minutes = Math.floor( (time_left_milli_secs - time_left_hours*(3600 *1000)  - time_left_days*(3600 * 24 * 1000)) / (1000*60) );
            let time_left_seconds = Math.floor( (time_left_milli_secs % (1000*60)) / 1000 );

            let content = `
                ${ (time_left_days>0?"<emph>"+ time_left_days+"</emph> <b>day"+(time_left_days>1?"s":"")+"</b>":"")}
                ${ ( (time_left_days!=0 || time_left_hours != 0) ?"<emph>"+ time_left_hours+"</emph> <b>hour"+(time_left_hours>1?"s":"")+"</b>":"")}
                ${ "<emph>"+ time_left_minutes+"</emph> <b>minute"+(time_left_minutes>1?"s":"")+"</b>"}
                ${ "<emph>"+ time_left_seconds+"</emph> <b>second"+(time_left_seconds>1?"s":"")+"</b>"}
            `;
            return content;
        }

        function find_rollout_by_name(s){
            for(let i = 0; i != rollouts_global.length; ++i)
             if (rollouts_global[i].name == s) return rollouts_global[i];
            return undefiend;
        }

        function find_rollout_by_id(s){
            for(let i = 0; i != rollouts_global.length; ++i)
             if (rollouts_global[i].id == s) return rollouts_global[i];
            return undefiend;
        }


        function action_launch_rollout(rollout_id){
            let rollout = find_rollout_by_id(rollout_id);
            if (rollout == undefined) return;
            rollout.state = ROLLOUT_STARTED_PENDING;
            $(`#${rollout.internal_id}_btn_launch`).addClass("disabled");
            $(`#${rollout.internal_id}_header_details`).html(gen_header_details(rollout));
            command_socket.send(JSON.stringify({cmd:"launch_rollout",rollout:rollout}));
        }

        function action_kill_rollout(rollout_name){
            let rollout = find_rollout_by_id(rollout_id);
            if (rollout == undefined) return;
            rollout.state = ROLLOUT_STOP_PENDING;
            update_view(rollout);
            command_socket.send(JSON.stringify({cmd:"kill_rollout",rollout:rollout}));
        }

        function gen_header_details(rollout){
                switch(rollout.state){
                    case ROLLOUT_READY: return `<span class="badge badge-primary pull-right" id="nav_info_connection">Ready</span>`;
                    case ROLLOUT_STARTED_PENDING: return `<span class="badge badge-info pull-right" id="nav_info_connection">Starting...</span>`;
                    case ROLLOUT_STARTED: return `<span class="badge badge-success pull-right" id="nav_info_connection">Started.</span>`;
                    case ROLLOUT_STOP_PENDING: break;
                    case ROLLOUT_FAILED: return `<span class="badge badge-danger" id="nav_info_connection">Fatal Error</span>`;
                    case ROLLOUT_DONE: return `<span class="badge badge-info" id="nav_info_connection">Done</span>`;
                    default: return `<span class="badge badge-danger" id="nav_info_connection">Status not available</span>`;
                }
            }
        function gen_header(rollout){
                let h_details = gen_header_details(rollout);
                console.log(rollout);
                if (rollout.url != undefined)
                    return `
                    <span style="font-size:24px;"><a href="${rollout.url}" target="_blank">${rollout.name}</a></span> <div id="${rollout.internal_id}_header_details" >${h_details}</div>                   
                    `;
                 
                return `
                <span style="font-size:24px;">${rollout.name}</span> <div id="${rollout.internal_id}_header_details" >${h_details}</div>                   
                `;
        }
            function gen_default_body(rollout){
                let d = new Date(rollout.when);

                let time_sec = gen_html_time_section(rollout);
                let actions = "";
                if (rollout.state == ROLLOUT_READY || rollout.state == ROLLOUT_DONE){
                    actions = `<a  class="btn btn-primary" onclick="action_launch_rollout('${rollout.id}');" id="${rollout.internal_id}_btn_launch" >
                                Launch
                               </a>
                               <!--class="btn btn-primary" onclick="action_edit_rollout('${rollout.id}');" id="${rollout.internal_id}_btn_edit">
                                Edit
                               </a-->                               
                               `;
                }

                let table_body = "";
                if (rollout.state == ROLLOUT_FAILED){
                    let health = "";
                    let d = new Date(rollout.up_since);
                    let time_sec = gen_html_uptime_section(rollout);
                    if (rollout.coverage == undefined) rollout.coverage = 0;
                    if (rollout.health == undefined) health = `<span class="badge badge-info">Computing...</span>`;                 
                    table_body = `
                    <thead><tr><th>Error Details</th><th>Overall Status</th><th>Health</th><th>Expected Time remaining</th><th>Actions</th></tr></thead>
                    <tbody>
                        <tr>
                            <td style="">
                             <code>   ${rollout.error_details} </code>
                            </td>
                            
                            <td style="alignment-vertical:center;">
                              <span class="label">  <div class="progress">
                                    <div style="width:${rollout.coverage*100.0}%;" 
                                        class="progress-bar progress-bar-striped danger" 
                                        role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" >
                                        
                                    </div>
                                </div>
                                ${Math.round(rollout.coverage*100.0)} %</span>
                            </td>
                            <td>
                                <span class="badge badge-danger">Technical Failure</span>
                            </td>
                            <td>&#x221e;</td>
                            <td></td>
                        </tr>
                    </tbody>
                    `;
                }
                else if (rollout.state == ROLLOUT_READY || rollout.state == ROLLOUT_STARTED_PENDING) table_body = `
                    <thead><tr><th>Scheduled</th><th>Starts Automatically in</th><th>Actions</th></tr></thead>
                    <tbody>
                        <tr>
                            <td style="width:15%;">${d.getMonth()+1}/${d.getDate()}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}</td>
                            <td style="width:25%;">
                                <div class="rollout-time-left" id="${rollout.internal_id}_time_left_section">
                                    ${time_sec} 
                                </div>
                            </td>
                            <td style="text-align:right;" >${actions}</td>
                        </tr>
                    </tbody>
                    `;
                else if (rollout.state == ROLLOUT_STARTED /*|| ROLLOUT_STOP_PENDING*/){
                    let health = "";
                    let d = new Date(rollout.up_since);
                    let time_sec = gen_html_uptime_section(rollout);
                    let time_remain = gen_html_remaining_time_section(rollout);
                    if (rollout.coverage == undefined) rollout.coverage = 0;
                    if (rollout.health == undefined) health = `<span class="badge badge-info">Computing...</span>`;
                    else {
                        if (rollout.health.FailState>0) health = `<span class="badge badge-danger">There are failures</span>`;
                        else if (rollout.health.WarnState>0) health = `<span class="badge badge-warning">Critical</span>`;
                        else health = `<span class="badge badge-success">Ok</span>`;
                    }

                    table_body = `
                    <thead><tr><th>Started</th><th>Uptime</th><th>Overall Status</th><th>Health</th><th>Expected Time remaining</th><th>Actions</th></tr></thead>
                    <tbody>
                        <tr>
                            <td style="width:15%;">${d.getMonth()+1}/${d.getDay()+1}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}</td>
                            <td>
                                <div class="rollout-time-left" id="${rollout.internal_id}_uptime_section">
                                    ${time_sec}
                                </div>
                            </td>
                            <td style="alignment-vertical:center;">
                              <span class="label">  <div class="progress">
                                    <div style="width:${rollout.coverage*100.0}%;" 
                                        class="progress-bar progress-bar-striped active" 
                                        role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" >
                                        
                                    </div>
                                </div>
                                ${Math.round(rollout.coverage*100.0)} %</span>
                            </td>
                            <td style="width:15%;">
                                ${health}
                            </td>
                            <td id="${rollout.internal_id}_estimated_remaining_time_section" style="width:20%;" >${time_remain}</td>
                            <td>
                              <a  class="btn btn-primary" onclick="dlg_open_market_urls('${rollout.id}');" id="btn_dlg_open_market_urls">
                                Markets
                              </a>                                      
                            </td>
                        </tr>
                    </tbody>
                    `;
                }
                return `
                  <p class="card-text">
                    <table class="table table-bordered">
                        ${table_body}
                    </table>
                    
                  </p>
                `;
            }

        function gen_html_for_rollout(rollout){
            if (rollout.internal_id == undefined) {
                    rollout.internal_id = "rollout-id-"+(gen_html_for_rollout_id_counter++).toString();
            }

            return ` 
            <div class="card" style="margin:4px;" id = "${rollout.internal_id}">
                <div class="card-header" id = "${rollout.internal_id}_card_header">
                    ${gen_header(rollout)}
                </div>
                <div class="card-body" id = "${rollout.internal_id}_body">
                    ${gen_default_body(rollout)}
                </div>
            </div>
            `;
        }

        function create_rollout_view(rollouts){
            console.log(`create_rollout_view()`);
            let content = "";
            for(let i = 0; i != rollouts.length;++i){
                let h = gen_html_for_rollout(rollouts[i]);
                content += h;                
            }
            $(rollouts_view).html(content);
        }

        function update_view(rollout){

            $(`#${rollout.internal_id}_card_header`).html(gen_header(rollout));
            $(`#${rollout.internal_id}_body`).html(gen_default_body(rollout));

            
            if(rollout.state == ROLLOUT_STARTED){
                $(`#${rollout.internal_id}_btn_launch`).removeClass("disabled").addClass("disabled");
                $(`#${rollout.internal_id}_btn_kill`).removeClass("disabled");
            } else if(rollout.state == ROLLOUT_STOP_PENDING){
                $(`#${rollout.internal_id}_btn_launch`).removeClass("disabled").addClass("disabled");
                $(`#${rollout.internal_id}_btn_kill`).removeClass("disabled").addClass("disabled");
            }
        }

        function save_rollout(r){
            if (r == undefined) return;
            let v = rollouts_global;
            let inserted = false;
            for(let i = 0; i != v.length;++i){
                if (r.id != v[i].id) continue;
                let internal_id = v[i].internal_id;
                v[i] = r;
                v[i].internal_id = internal_id;
                inserted = true;
                return v[i];
            }
            if (!inserted) v.push(r);
            return r;
        }

        function remove_rollout(r_id){
            let  t = [];
            for(let i = 0; i != rollouts_global.length;++i){
                if (rollouts_global[i].id != r_id) t.push(rollouts_global[i]);
            }
            return t;
        }


        function establish_command_channel(){
            console.log("establish_command_channel(): ws://<%=server_name%>:<%=command_port%>");
            
            function on_command_channel_connect(){
                let ws = command_socket;
                function handle_server_status_messages(m){
                    let msg = JSON.parse(m.data);
                    if (msg.reply != undefined && msg.reply == "ok"){
                        if (msg.rollout != undefined){
                            let rollout = save_rollout(msg.rollout);
                            if (rollout.name == undefined){
                                //Deletion
                                $(`#${rollout.internal_id}`).remove();
                                remove_rollout(rollout.id);
                                return;
                            }
                            if (rollout.internal_id == undefined){
                                //New entry
                                $(`#info_no_rollouts_card`).remove();
                                let h = gen_html_for_rollout(rollout);
                                $(rollouts_view).append(h);
                            }
                            else update_view(rollout);
                        }
                    }            
                }
                function msg_arrived(msg){
                    //console.log(msg.data);
                    ws.removeEventListener("message",msg_arrived);
                    ws.addEventListener("message", handle_server_status_messages);
                    let rollouts = JSON.parse(msg.data);
                    rollouts_global = rollouts;
                    create_rollout_view(rollouts_global);
                    //console.log(rollouts);
                }              

                cmd_channel_established = true;
                ws.addEventListener("message", msg_arrived);
                command_socket.send(JSON.stringify({cmd:"get_planned_rollouts"}));
            }
            function on_command_channel_close(){
                //console.log("on_command_channel_close"); 
                cmd_channel_established = false;
                $("#btn_start").attr("disabled","disabled");
                setTimeout(establish_command_channel,1000);                
            }
            function on_command_channel_error(){
                cmd_channel_established = false;
                //console.log("on_command_channel_error");                
            }

            command_socket = new WebSocket("ws://"+window.location.hostname+":<%=command_port%>");
            console.log("Connecting to "+"ws://"+window.location.hostname+":<%=command_port%>");
            command_socket.addEventListener("open", on_command_channel_connect);
            command_socket.addEventListener("close", on_command_channel_close);
            command_socket.addEventListener("error", on_command_channel_error);        
        }
        
        $(document).ready(() => {

            rollouts_view = $("#rollouts_view");

            setInterval(() => {
                for (let e of global_observer_handlers) if (e.handler != undefined) e.handler();
             } , 250);

             let last_cmd_channel_established = cmd_channel_established;
             let last_connected = connected;
            

             register_observer("Update Timerinfo", function(){
                 let v = rollouts_global;
                 if (v == undefined || v.length == 0){
                     //Case no rollouts available
                     if(!$(`#info_no_rollouts_card`).empty()) return;
                     $(`#rollouts_view`).html(`
                     <div class="card" style="margin:4px;" id = "info_no_rollouts_card">
                        <div class="card-body" id = "info_no_rollouts_card_body">
                            <p class="card-text">No Rollouts scheduled or running.</p>
                        </div>
                    </div>
                     `);
                    return;
                 } 
                 for(let i = 0; i != v.length;++i){
                     let rollout = v[i];
                     if (rollout.state == ROLLOUT_READY) $(`#${rollout.internal_id}_time_left_section`).html(gen_html_time_section(rollout));
                     else if (rollout.state == ROLLOUT_STARTED){
                        $(`#${rollout.internal_id}_uptime_section`).html(gen_html_uptime_section(rollout));
                        if (rollout.coverage != 0){
                            $(`#${rollout.internal_id}_estimated_remaining_time_section`).html(gen_html_remaining_time_section(rollout));                            
                        }
                     }
                 }
             });

             register_observer("Check Connections", function(){
                 //console.log("Check Connections",connected,cmd_channel_established);

                 if (last_cmd_channel_established != cmd_channel_established ){
                   
                    last_cmd_channel_established = cmd_channel_established;
                    
                    let healthy = cmd_channel_established;               

                    if(healthy) $("#nav_info_connection").html("Connected");
                    else $("#nav_info_connection").html("Not Connected");

                    $("#nav_info_connection").removeClass("badge-danger");
                    $("#nav_info_connection").removeClass("badge-success");

                    if(healthy)$("#nav_info_connection").addClass("badge-success");else $("#nav_info_connection").addClass("badge-danger");
                 }
             })

            if (!connected)
                setTimeout(() => {
                    //login(window.location.hostname+":=ceps_api_port");
                    establish_command_channel();
                }, 0);
        });
    </script>
</body>

</html>
